{
  "contractName": "ComptrollerV1Storage",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accountAssets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "comptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationIncentiveMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingComptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountAssets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationIncentiveMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingComptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accountAssets(address,uint256)\":{\"notice\":\"Per-account mapping of \\\"assets you are in\\\", capped by maxAssets\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"closeFactorMantissa()\":{\"notice\":\"Multiplier used to calculate the maximum repayAmount when liquidating a borrow\"},\"comptrollerImplementation()\":{\"notice\":\"Active brains of Unitroller\"},\"liquidationIncentiveMantissa()\":{\"notice\":\"Multiplier representing the discount on collateral that a liquidator receives\"},\"maxAssets()\":{\"notice\":\"Max number of assets a single account can participate in (borrow or use as collateral)\"},\"oracle()\":{\"notice\":\"Oracle which gives the price of any given asset\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"pendingComptrollerImplementation()\":{\"notice\":\"Pending brains of Unitroller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol\":\"ComptrollerV1Storage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/CToken.sol\":{\"keccak256\":\"0x136894a7a8518c5cac999d258b916502d3b8b65f485cd8a7c636ad2858cf5691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97bb7e779b564408cadc9545953f97321d2a95ea5c95f07214b4e3e06f55425f\",\"dweb:/ipfs/QmNR27j2Qg4vkuXd91eCesR81rHSQ6q7gCK8TtdRBkdsGR\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol\":{\"keccak256\":\"0x654e9834bfd3bcd01555b2c873061158898989e0e1a6b25f33ee233f6d623d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1c40bf0c27b8d5068d251cde0317eb72130d0b281fe8eab85a4bc914f1913e6\",\"dweb:/ipfs/QmcDxPu3Ds3EFPbdArCw5Hc3ZxBXHbk7rG9SXUszNcjbYU\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/UnitrollerAdminStorage.sol\":{\"keccak256\":\"0xd50b29234e3801c72bb5c3ccfad374de90daea3b397105f27d5c1bff9bc6b3a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393f35359daf3644c2b333e1774701c5473dcd5087a721c1fd31a419f03794fe\",\"dweb:/ipfs/QmVxYFKdiBkpF9PaFkfCwWy3MNmYLZcYYqMwwVkH789cFk\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CTokenInterface.sol\":{\"keccak256\":\"0xba0dfb7800f21b670add93b7aeb631978c8212778a25567c84d9fb174aead66a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f31d01c0b27e34c56b2036d8476b70e62a0a67920df9d01ba827bddbb0a00ae\",\"dweb:/ipfs/QmXvNaLxHy2UvQczTyRy9RKico3N2u4DomDzvQJ5o7R9dv\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CTokenStorage.sol\":{\"keccak256\":\"0xad89d9fe1585f18620574e12d42cf30fdd9cfc9e54546593727d66283b3083c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22656d5168f793f1d5da3ad4114e2812347b6b9976fe2a72d6e306659e77419b\",\"dweb:/ipfs/QmcvwzUEJfoTz7apyU18PeWQ5doExtpFgeR9zpKyvR1LMe\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/ComptrollerInterface.sol\":{\"keccak256\":\"0x83b61b9455d5e7adde8528b371fffb3b59d51c43756d39a74f5e1016dac45460\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dbd9d8667e12f393c30ef9c9f994b837ee25fd1ce9b27702a9a9695283133bf\",\"dweb:/ipfs/QmVvPY8K4nDcmxpqJ6ctg6xiMeT4psp5kASnZWrdFgPMvE\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/CarefulMath.sol\":{\"keccak256\":\"0x4dcca42181961bb0a02800fe7397ab080693f303d4a363041cf77548b482db1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e1c0f00336a64b90f75c41ff40021f28ae62657842469c897a405eb70aebba2\",\"dweb:/ipfs/Qma6pam7zLnBRvNCuohZMMTuUXZfxGgyP6uJbhdw1GxDBf\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/Exponential.sol\":{\"keccak256\":\"0x4994f84324a16ac8be78412ea6c8d44af52b2b637272ca1c06fac427519c2dc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f6d7e791478b26aa5b0984f5128a525b5120a45ea656c388d70dd7ef70ab67\",\"dweb:/ipfs/QmWCtxSiCVksTJqFzAZvk38mKExPswgMhv1LwCdJUy6emT\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/ExponentialNoError.sol\":{\"keccak256\":\"0x3555785e8b11febebebd739f2a7359ecdf686f08c051e45a63eca4b466e566fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce8089889735b61d82bc2fb6acf55e25be8605df26f6778d285dab28d4f6fed7\",\"dweb:/ipfs/Qmf3jpbr2hBfukdxFhNABTCm87zasK6d96AVbWkd1DG4KF\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/oracles/PriceOracle.sol\":{\"keccak256\":\"0xa058e3e48bf23659ddf996178223fb8dc5b8c41873ed74dca46694eb5ad46bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4e3b3db39ecedfd997b4fdd36a5f973b0d3f513a86d1bbcf49e166d70dfa0d4\",\"dweb:/ipfs/QmV8HWupWwRQ68Cp177DLtV4w973vXFyYzNo4nS4hgiSK8\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/rates/InterestRateModel.sol\":{\"keccak256\":\"0x5e3aab023ea82ec7c73b832f249db181054eca0ae8734b6bcd041d5923925a81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af53449409fa31d44df7ff7c7367ef16395c535860fec7747cc3bd3bf2bae6d5\",\"dweb:/ipfs/QmNodvzeHPnciHBjJzqjcRyjaDNntTdBzCxAFQBcKS1u4X\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/reporters/TokenErrorReporter.sol\":{\"keccak256\":\"0xd14c63292c7881e0d8455d60fc91751bde796df8fc25412d693a335ef5e619a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aff494ba85779176da6f24dbfda3edc6a9e03633e8e89a63f53fdc431272d297\",\"dweb:/ipfs/QmYsQC6mUy2AvHTLE2WhaizmC44RgvoEqdPEPAn2eviVFD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061022c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063bb82aa5e11610066578063bb82aa5e146100db578063dce15449146100e3578063dcfbc0c7146100f6578063e8755446146100fe578063f851a4401461010657610093565b806326782247146100985780634ada90af146100b65780637dc0d1d0146100cb57806394b2294b146100d3575b600080fd5b6100a061010e565b6040516100ad91906101d9565b60405180910390f35b6100be61011d565b6040516100ad91906101ed565b6100a0610123565b6100be610132565b6100a0610138565b6100a06100f13660046101a3565b610147565b6100a061017f565b6100be61018e565b6100a0610194565b6001546001600160a01b031681565b60065481565b6004546001600160a01b031681565b60075481565b6002546001600160a01b031681565b6008602052816000526040600020818154811061016357600080fd5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b60055481565b6000546001600160a01b031681565b600080604083850312156101b5578182fd5b82356001600160a01b03811681146101cb578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220c30af3577c26b4af2e3e9049e737df683b422600054fbaab71d328c5bc164ae464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063bb82aa5e11610066578063bb82aa5e146100db578063dce15449146100e3578063dcfbc0c7146100f6578063e8755446146100fe578063f851a4401461010657610093565b806326782247146100985780634ada90af146100b65780637dc0d1d0146100cb57806394b2294b146100d3575b600080fd5b6100a061010e565b6040516100ad91906101d9565b60405180910390f35b6100be61011d565b6040516100ad91906101ed565b6100a0610123565b6100be610132565b6100a0610138565b6100a06100f13660046101a3565b610147565b6100a061017f565b6100be61018e565b6100a0610194565b6001546001600160a01b031681565b60065481565b6004546001600160a01b031681565b60075481565b6002546001600160a01b031681565b6008602052816000526040600020818154811061016357600080fd5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b60055481565b6000546001600160a01b031681565b600080604083850312156101b5578182fd5b82356001600160a01b03811681146101cb578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220c30af3577c26b4af2e3e9049e737df683b422600054fbaab71d328c5bc164ae464736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1233:100",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:100",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "101:287:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "147:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "156:6:100"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "164:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "149:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "149:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "149:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "122:7:100"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "131:9:100"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "118:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:23:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "143:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "114:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:32:100"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:100"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "182:36:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "208:9:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "195:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:23:100"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "186:5:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "281:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "290:6:100"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "298:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "283:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "283:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "283:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "240:5:100"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "251:5:100"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "266:3:100",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "271:1:100",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "262:3:100"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "262:11:100"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:19:100"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "247:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:31:100"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "237:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:42:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "230:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:50:100"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "316:15:100",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "326:5:100"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:100"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "340:42:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "367:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "378:2:100",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:18:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "350:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:32:100"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "59:9:100",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "70:7:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "82:6:100",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "90:6:100",
                "type": ""
              }
            ],
            "src": "14:374:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "494:102:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "504:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "516:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "527:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "512:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "504:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "546:9:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "561:6:100"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "577:3:100",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "582:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "573:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "573:11:100"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "586:1:100",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "569:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "569:19:100"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "557:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "557:32:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:51:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "539:51:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "463:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "485:4:100",
                "type": ""
              }
            ],
            "src": "393:203:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:102:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "728:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "751:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "736:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "728:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "785:6:100"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "801:3:100",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "806:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "797:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "797:11:100"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "810:1:100",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "793:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "793:19:100"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "781:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:32:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:51:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:51:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CToken_$14621__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "687:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "698:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "709:4:100",
                "type": ""
              }
            ],
            "src": "601:219:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "947:102:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "957:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "969:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "965:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "957:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "999:9:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1014:6:100"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1030:3:100",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1035:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1026:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1026:11:100"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1039:1:100",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1022:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1022:19:100"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1010:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1010:32:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "992:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "992:51:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "992:51:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PriceOracle_$26619__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "916:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "927:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "938:4:100",
                "type": ""
              }
            ],
            "src": "825:224:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1155:76:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1165:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1177:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1188:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1173:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1165:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1207:9:100"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1218:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:25:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:25:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1124:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1135:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1146:4:100",
                "type": ""
              }
            ],
            "src": "1054:177:100"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_CToken_$14621__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_PriceOracle_$26619__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 100,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "138:772:48:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "138:772:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:27:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;569:40:48;;;:::i;:::-;;;;;;;:::i;280:25::-;;;:::i;734:21::-;;;:::i;420:40:54:-;;;:::i;857:49:48:-;;;;;;:::i;:::-;;:::i;525:47:54:-;;;:::i;422:31:48:-;;;:::i;233:20:54:-;;;:::i;329:27::-;;;-1:-1:-1;;;;;329:27:54;;:::o;569:40:48:-;;;;:::o;280:25::-;;;-1:-1:-1;;;;;280:25:48;;:::o;734:21::-;;;;:::o;420:40:54:-;;;-1:-1:-1;;;;;420:40:54;;:::o;857:49:48:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;857:49:48;;-1:-1:-1;857:49:48;;-1:-1:-1;857:49:48:o;525:47:54:-;;;-1:-1:-1;;;;;525:47:54;;:::o;422:31:48:-;;;;:::o;233:20:54:-;;;-1:-1:-1;;;;;233:20:54;;:::o;14:374:100:-;;;143:2;131:9;122:7;118:23;114:32;111:2;;;164:6;156;149:22;111:2;195:23;;-1:-1:-1;;;;;247:31:100;;237:42;;227:2;;298:6;290;283:22;227:2;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;101:287:100:o;393:203::-;-1:-1:-1;;;;;557:32:100;;;;539:51;;527:2;512:18;;494:102::o;1054:177::-;1200:25;;;1188:2;1173:18;;1155:76::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"./UnitrollerAdminStorage.sol\";\nimport \"../../oracles/PriceOracle.sol\";\n\ncontract ComptrollerV1Storage is UnitrollerAdminStorage {\n\n    /**\n     * @notice Oracle which gives the price of any given asset\n     */\n    PriceOracle public oracle;\n\n    /**\n     * @notice Multiplier used to calculate the maximum repayAmount when liquidating a borrow\n     */\n    uint public closeFactorMantissa;\n\n    /**\n     * @notice Multiplier representing the discount on collateral that a liquidator receives\n     */\n    uint public liquidationIncentiveMantissa;\n\n    /**\n     * @notice Max number of assets a single account can participate in (borrow or use as collateral)\n     */\n    uint public maxAssets;\n\n    /**\n     * @notice Per-account mapping of \"assets you are in\", capped by maxAssets\n     */\n    mapping(address => CToken[]) public accountAssets;\n\n}",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol",
    "exportedSymbols": {
      "CToken": [
        14621
      ],
      "CTokenInterface": [
        24352
      ],
      "CTokenStorage": [
        24427
      ],
      "CarefulMath": [
        24994
      ],
      "ComptrollerInterface": [
        24635
      ],
      "ComptrollerV1Storage": [
        22482
      ],
      "Exponential": [
        25587
      ],
      "ExponentialNoError": [
        26341
      ],
      "InterestRateModel": [
        26653
      ],
      "PriceOracle": [
        26619
      ],
      "TokenErrorReporter": [
        27183
      ],
      "UnitrollerAdminStorage": [
        22627
      ]
    },
    "id": 22483,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22457,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:48"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/UnitrollerAdminStorage.sol",
        "file": "./UnitrollerAdminStorage.sol",
        "id": 22458,
        "nodeType": "ImportDirective",
        "scope": 22483,
        "sourceUnit": 22628,
        "src": "58:38:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/oracles/PriceOracle.sol",
        "file": "../../oracles/PriceOracle.sol",
        "id": 22459,
        "nodeType": "ImportDirective",
        "scope": 22483,
        "sourceUnit": 26620,
        "src": "97:39:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22460,
              "name": "UnitrollerAdminStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22627,
              "src": "171:22:48"
            },
            "id": 22461,
            "nodeType": "InheritanceSpecifier",
            "src": "171:22:48"
          }
        ],
        "contractDependencies": [
          22627
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22482,
        "linearizedBaseContracts": [
          22482,
          22627
        ],
        "name": "ComptrollerV1Storage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 22462,
              "nodeType": "StructuredDocumentation",
              "src": "201:74:48",
              "text": " @notice Oracle which gives the price of any given asset"
            },
            "functionSelector": "7dc0d1d0",
            "id": 22465,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "280:25:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceOracle_$26619",
              "typeString": "contract PriceOracle"
            },
            "typeName": {
              "id": 22464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22463,
                "name": "PriceOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26619,
                "src": "280:11:48"
              },
              "referencedDeclaration": 26619,
              "src": "280:11:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceOracle_$26619",
                "typeString": "contract PriceOracle"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22466,
              "nodeType": "StructuredDocumentation",
              "src": "312:105:48",
              "text": " @notice Multiplier used to calculate the maximum repayAmount when liquidating a borrow"
            },
            "functionSelector": "e8755446",
            "id": 22468,
            "mutability": "mutable",
            "name": "closeFactorMantissa",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "422:31:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22467,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22469,
              "nodeType": "StructuredDocumentation",
              "src": "460:104:48",
              "text": " @notice Multiplier representing the discount on collateral that a liquidator receives"
            },
            "functionSelector": "4ada90af",
            "id": 22471,
            "mutability": "mutable",
            "name": "liquidationIncentiveMantissa",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "569:40:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22470,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22472,
              "nodeType": "StructuredDocumentation",
              "src": "616:113:48",
              "text": " @notice Max number of assets a single account can participate in (borrow or use as collateral)"
            },
            "functionSelector": "94b2294b",
            "id": 22474,
            "mutability": "mutable",
            "name": "maxAssets",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "734:21:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22473,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "734:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22475,
              "nodeType": "StructuredDocumentation",
              "src": "762:90:48",
              "text": " @notice Per-account mapping of \"assets you are in\", capped by maxAssets"
            },
            "functionSelector": "dce15449",
            "id": 22481,
            "mutability": "mutable",
            "name": "accountAssets",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "857:49:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$14621_$dyn_storage_$",
              "typeString": "mapping(address => contract CToken[])"
            },
            "typeName": {
              "id": 22480,
              "keyType": {
                "id": 22476,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "865:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "857:28:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$14621_$dyn_storage_$",
                "typeString": "mapping(address => contract CToken[])"
              },
              "valueType": {
                "baseType": {
                  "id": 22478,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 22477,
                    "name": "CToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14621,
                    "src": "876:6:48"
                  },
                  "referencedDeclaration": 14621,
                  "src": "876:6:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$14621",
                    "typeString": "contract CToken"
                  }
                },
                "id": 22479,
                "nodeType": "ArrayTypeName",
                "src": "876:8:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_CToken_$14621_$dyn_storage_ptr",
                  "typeString": "contract CToken[]"
                }
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 22483,
        "src": "138:772:48"
      }
    ],
    "src": "32:878:48"
  },
  "legacyAST": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol",
    "exportedSymbols": {
      "CToken": [
        14621
      ],
      "CTokenInterface": [
        24352
      ],
      "CTokenStorage": [
        24427
      ],
      "CarefulMath": [
        24994
      ],
      "ComptrollerInterface": [
        24635
      ],
      "ComptrollerV1Storage": [
        22482
      ],
      "Exponential": [
        25587
      ],
      "ExponentialNoError": [
        26341
      ],
      "InterestRateModel": [
        26653
      ],
      "PriceOracle": [
        26619
      ],
      "TokenErrorReporter": [
        27183
      ],
      "UnitrollerAdminStorage": [
        22627
      ]
    },
    "id": 22483,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22457,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:48"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/UnitrollerAdminStorage.sol",
        "file": "./UnitrollerAdminStorage.sol",
        "id": 22458,
        "nodeType": "ImportDirective",
        "scope": 22483,
        "sourceUnit": 22628,
        "src": "58:38:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/oracles/PriceOracle.sol",
        "file": "../../oracles/PriceOracle.sol",
        "id": 22459,
        "nodeType": "ImportDirective",
        "scope": 22483,
        "sourceUnit": 26620,
        "src": "97:39:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22460,
              "name": "UnitrollerAdminStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22627,
              "src": "171:22:48"
            },
            "id": 22461,
            "nodeType": "InheritanceSpecifier",
            "src": "171:22:48"
          }
        ],
        "contractDependencies": [
          22627
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22482,
        "linearizedBaseContracts": [
          22482,
          22627
        ],
        "name": "ComptrollerV1Storage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 22462,
              "nodeType": "StructuredDocumentation",
              "src": "201:74:48",
              "text": " @notice Oracle which gives the price of any given asset"
            },
            "functionSelector": "7dc0d1d0",
            "id": 22465,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "280:25:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceOracle_$26619",
              "typeString": "contract PriceOracle"
            },
            "typeName": {
              "id": 22464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22463,
                "name": "PriceOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26619,
                "src": "280:11:48"
              },
              "referencedDeclaration": 26619,
              "src": "280:11:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceOracle_$26619",
                "typeString": "contract PriceOracle"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22466,
              "nodeType": "StructuredDocumentation",
              "src": "312:105:48",
              "text": " @notice Multiplier used to calculate the maximum repayAmount when liquidating a borrow"
            },
            "functionSelector": "e8755446",
            "id": 22468,
            "mutability": "mutable",
            "name": "closeFactorMantissa",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "422:31:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22467,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22469,
              "nodeType": "StructuredDocumentation",
              "src": "460:104:48",
              "text": " @notice Multiplier representing the discount on collateral that a liquidator receives"
            },
            "functionSelector": "4ada90af",
            "id": 22471,
            "mutability": "mutable",
            "name": "liquidationIncentiveMantissa",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "569:40:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22470,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22472,
              "nodeType": "StructuredDocumentation",
              "src": "616:113:48",
              "text": " @notice Max number of assets a single account can participate in (borrow or use as collateral)"
            },
            "functionSelector": "94b2294b",
            "id": 22474,
            "mutability": "mutable",
            "name": "maxAssets",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "734:21:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22473,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "734:4:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22475,
              "nodeType": "StructuredDocumentation",
              "src": "762:90:48",
              "text": " @notice Per-account mapping of \"assets you are in\", capped by maxAssets"
            },
            "functionSelector": "dce15449",
            "id": 22481,
            "mutability": "mutable",
            "name": "accountAssets",
            "nodeType": "VariableDeclaration",
            "scope": 22482,
            "src": "857:49:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$14621_$dyn_storage_$",
              "typeString": "mapping(address => contract CToken[])"
            },
            "typeName": {
              "id": 22480,
              "keyType": {
                "id": 22476,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "865:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "857:28:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$14621_$dyn_storage_$",
                "typeString": "mapping(address => contract CToken[])"
              },
              "valueType": {
                "baseType": {
                  "id": 22478,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 22477,
                    "name": "CToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14621,
                    "src": "876:6:48"
                  },
                  "referencedDeclaration": 14621,
                  "src": "876:6:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$14621",
                    "typeString": "contract CToken"
                  }
                },
                "id": 22479,
                "nodeType": "ArrayTypeName",
                "src": "876:8:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_CToken_$14621_$dyn_storage_ptr",
                  "typeString": "contract CToken[]"
                }
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 22483,
        "src": "138:772:48"
      }
    ],
    "src": "32:878:48"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-31T20:20:04.335Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accountAssets(address,uint256)": {
        "notice": "Per-account mapping of \"assets you are in\", capped by maxAssets"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "closeFactorMantissa()": {
        "notice": "Multiplier used to calculate the maximum repayAmount when liquidating a borrow"
      },
      "comptrollerImplementation()": {
        "notice": "Active brains of Unitroller"
      },
      "liquidationIncentiveMantissa()": {
        "notice": "Multiplier representing the discount on collateral that a liquidator receives"
      },
      "maxAssets()": {
        "notice": "Max number of assets a single account can participate in (borrow or use as collateral)"
      },
      "oracle()": {
        "notice": "Oracle which gives the price of any given asset"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "pendingComptrollerImplementation()": {
        "notice": "Pending brains of Unitroller"
      }
    },
    "version": 1
  }
}