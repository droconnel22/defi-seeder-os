{
  "contractName": "CDelegationStorage",
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementation()\":{\"notice\":\"Implementation address for this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CDelegationStorage.sol\":\"CDelegationStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CDelegationStorage.sol\":{\"keccak256\":\"0xe56575d3a1ed586270ddbb5e0fe16c02de255ebbdd71004c7963f04eafdb194e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcf915042728f564b327a512a351bd7da10c50ed0d682df03a1e39ad0ae5b67f\",\"dweb:/ipfs/QmP6xWaiVKcNVM2VxsSU3YDsQB9AAARzpjGbn8znSwmqQP\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060a08061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e91906056565b60405180910390f35b6000546001600160a01b031681565b6001600160a01b039190911681526020019056fea2646970667358221220d7717675706f3fac523575834bc0f5c27ed865d8a38e73327a69bb17eabf559364736f6c63430008000033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e91906056565b60405180910390f35b6000546001600160a01b031681565b6001600160a01b039190911681526020019056fea2646970667358221220d7717675706f3fac523575834bc0f5c27ed865d8a38e73327a69bb17eabf559364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:219:100",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:100",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:100"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:100",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:100"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:100",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:100"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:100",
                "type": ""
              }
            ],
            "src": "14:203:100"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 100,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:138:58:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "61:138:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;167:29:58;;:::o;14:203:100:-;-1:-1:-1;;;;;178:32:100;;;;160:51;;148:2;133:18;;115:102::o",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\n\n\ncontract CDelegationStorage {\n    /**\n     * @notice Implementation address for this contract\n     */\n    address public implementation;\n}",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CDelegationStorage.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CDelegationStorage.sol",
    "exportedSymbols": {
      "CDelegationStorage": [
        23928
      ]
    },
    "id": 23929,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23924,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:58"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23928,
        "linearizedBaseContracts": [
          23928
        ],
        "name": "CDelegationStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 23925,
              "nodeType": "StructuredDocumentation",
              "src": "95:67:58",
              "text": " @notice Implementation address for this contract"
            },
            "functionSelector": "5c60da1b",
            "id": 23927,
            "mutability": "mutable",
            "name": "implementation",
            "nodeType": "VariableDeclaration",
            "scope": 23928,
            "src": "167:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23926,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 23929,
        "src": "61:138:58"
      }
    ],
    "src": "33:166:58"
  },
  "legacyAST": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CDelegationStorage.sol",
    "exportedSymbols": {
      "CDelegationStorage": [
        23928
      ]
    },
    "id": 23929,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23924,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:58"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23928,
        "linearizedBaseContracts": [
          23928
        ],
        "name": "CDelegationStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 23925,
              "nodeType": "StructuredDocumentation",
              "src": "95:67:58",
              "text": " @notice Implementation address for this contract"
            },
            "functionSelector": "5c60da1b",
            "id": 23927,
            "mutability": "mutable",
            "name": "implementation",
            "nodeType": "VariableDeclaration",
            "scope": 23928,
            "src": "167:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23926,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 23929,
        "src": "61:138:58"
      }
    ],
    "src": "33:166:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-31T20:20:04.385Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "implementation()": {
        "notice": "Implementation address for this contract"
      }
    },
    "version": 1
  }
}