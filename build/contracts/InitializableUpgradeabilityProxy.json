{
  "contractName": "InitializableUpgradeabilityProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.\",\"kind\":\"dev\",\"methods\":{\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"InitializableUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/InitializableUpgradeabilityProxy.sol\":\"InitializableUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/Address.sol\":{\"keccak256\":\"0x058f9da8fc13a6711e65b34f53f2a8dd0781051b809de31eb1ab90de9b9f4c40\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://acc9833eab064d06235daceb24458b228ddab7482bc406359e8baee618552d05\",\"dweb:/ipfs/QmYhN3HTQcvUjmtDEsSLkUa2PRQhG1qVFkTRQ7GEX6B2JM\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xd1a23e466d3b447d69637dd62a09306200af000f1e20ce63a87290b863bc04d9\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ae9f8a8707c8f8b13db749cc2ea38766abbdecdd51a935690b85fda7080e3c70\",\"dweb:/ipfs/Qmb6JMF3gMrWhA4SZRMrtN8GXzVuBDXqBZAk7QSgfmxVRq\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x5b175057475961d774c55ddce41b008b6d1b57cadf2a71d59bab024334adc8f6\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e44ddf953bf3852b49928df43b24a2d19dff9edc4574b1c5aff0016452ac428\",\"dweb:/ipfs/QmNPAWLQ7HQYtAqYZ8mv22JHbqEfu7py5isewAyq61Tn53\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/Proxy.sol\":{\"keccak256\":\"0xd0c4367e545500eb9067a70cb299e2234073e288e1a6ee92cbaf8e09ba704cf3\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://57266b85106f40a8860aba4f08ff03832889735a1d46a118114cb22783409901\",\"dweb:/ipfs/QmdS9RYptpkG7BCH8e9PWCrzBGcteyxMp3n47Ug8VZCG6J\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103ff806100206000396000f3fe6080604052600436106100225760003560e01c8063d1f578941461003357610029565b3661002957005b610031610046565b005b610031610041366004610239565b610060565b61004e61005e565b61005e610059610162565b610187565b565b600061006a610162565b6001600160a01b03161461007d57600080fd5b6100a860017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610390565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc146100e457634e487b7160e01b600052600160045260246000fd5b6100ed826101ab565b80511561015e576000826001600160a01b03168260405161010e91906102fa565b600060405180830381855af49150503d8060008114610149576040519150601f19603f3d011682016040523d82523d6000602084013e61014e565b606091505b505090508061015c57600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156101a6573d6000f35b3d6000fd5b6101b4816101fd565b6101d95760405162461bcd60e51b81526004016101d090610333565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061023157508115155b949350505050565b6000806040838503121561024b578182fd5b82356001600160a01b0381168114610261578283fd5b915060208381013567ffffffffffffffff8082111561027e578384fd5b818601915086601f830112610291578384fd5b8135818111156102a3576102a36103b3565b604051601f8201601f19168101850183811182821017156102c6576102c66103b3565b60405281815283820185018910156102dc578586fd5b81858501868301378585838301015280955050505050509250929050565b60008251815b8181101561031a5760208186018101518583015201610300565b818111156103285782828501525b509190910192915050565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606082015260800190565b6000828210156103ae57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a015dfed7b2bd4df46f609dee2a0ebdb49f5c283fb3428180d43e456a63ef05e64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c8063d1f578941461003357610029565b3661002957005b610031610046565b005b610031610041366004610239565b610060565b61004e61005e565b61005e610059610162565b610187565b565b600061006a610162565b6001600160a01b03161461007d57600080fd5b6100a860017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610390565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc146100e457634e487b7160e01b600052600160045260246000fd5b6100ed826101ab565b80511561015e576000826001600160a01b03168260405161010e91906102fa565b600060405180830381855af49150503d8060008114610149576040519150601f19603f3d011682016040523d82523d6000602084013e61014e565b606091505b505090508061015c57600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156101a6573d6000f35b3d6000fd5b6101b4816101fd565b6101d95760405162461bcd60e51b81526004016101d090610333565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061023157508115155b949350505050565b6000806040838503121561024b578182fd5b82356001600160a01b0381168114610261578283fd5b915060208381013567ffffffffffffffff8082111561027e578384fd5b818601915086601f830112610291578384fd5b8135818111156102a3576102a36103b3565b604051601f8201601f19168101850183811182821017156102c6576102c66103b3565b60405281815283820185018910156102dc578586fd5b81858501868301378585838301015280955050505050509250929050565b60008251815b8181101561031a5760208186018101518583015201610300565b818111156103285782828501525b509190910192915050565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606082015260800190565b6000828210156103ae57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a015dfed7b2bd4df46f609dee2a0ebdb49f5c283fb3428180d43e456a63ef05e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2385:100",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:100",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "110:1045:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "156:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "165:6:100"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "173:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "158:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "158:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "158:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "131:7:100"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "140:9:100"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "127:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:23:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "123:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:32:100"
                  },
                  "nodeType": "YulIf",
                  "src": "120:2:100"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "191:36:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "217:9:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "204:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:23:100"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "195:5:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "290:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "299:6:100"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "307:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "292:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "249:5:100"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "260:5:100"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "275:3:100",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "280:1:100",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "271:3:100"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "271:11:100"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "284:1:100",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "267:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "267:19:100"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "256:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "256:31:100"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "246:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "246:42:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "239:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "239:50:100"
                  },
                  "nodeType": "YulIf",
                  "src": "236:2:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "325:15:100",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "335:5:100"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "325:6:100"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "349:12:100",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "359:2:100",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "353:2:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "370:46:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "401:9:100"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "412:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:18:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "384:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:32:100"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "374:6:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "425:28:100",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "435:18:100",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "429:2:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "480:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "489:6:100"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "497:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "468:6:100"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "476:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "465:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:14:100"
                  },
                  "nodeType": "YulIf",
                  "src": "462:2:100"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "515:32:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "529:9:100"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:22:100"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "519:2:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "604:6:100"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "612:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "597:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "574:2:100"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "578:4:100",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:13:100"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "585:7:100"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "566:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "566:27:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "559:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:35:100"
                  },
                  "nodeType": "YulIf",
                  "src": "556:2:100"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "630:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "653:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "640:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:16:100"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "634:2:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "679:22:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "681:16:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "681:18:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "681:18:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "671:2:100"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "675:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "668:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:10:100"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:100"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "710:23:100",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "730:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:9:100"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "714:6:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "742:67:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "768:6:100"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "784:2:100"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "788:4:100",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "780:13:100"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "799:2:100",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:3:100"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "795:7:100"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "776:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "776:27:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "764:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "764:40:100"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "806:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:49:100"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "746:10:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "868:22:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "870:16:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "870:18:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "870:18:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "827:10:100"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "839:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "824:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "824:18:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "847:10:100"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "859:6:100"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "844:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:22:100"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "821:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "821:46:100"
                  },
                  "nodeType": "YulIf",
                  "src": "818:2:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:2:100",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "910:10:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "899:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:22:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "899:22:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "937:6:100"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "945:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "930:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "930:18:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "930:18:100"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "994:26:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1003:6:100"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:100"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "996:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "996:22:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "996:22:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "971:2:100"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "975:2:100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "967:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "967:11:100"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "980:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "963:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "963:20:100"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "985:7:100"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "960:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:33:100"
                  },
                  "nodeType": "YulIf",
                  "src": "957:2:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1046:6:100"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1054:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1042:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1042:15:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1063:2:100"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1067:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1059:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1059:11:100"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1072:2:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1029:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1029:46:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1029:46:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1099:6:100"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1107:2:100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1095:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1095:15:100"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1112:2:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1091:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1091:24:100"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1117:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1084:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1084:40:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1084:40:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1133:16:100",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1143:6:100"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:100",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:100",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:100",
                "type": ""
              }
            ],
            "src": "14:1141:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:293:100",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1307:27:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1327:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1321:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:13:100"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1311:6:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1343:12:100",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "1352:3:100"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1347:1:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1416:77:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1441:3:100"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1446:1:100"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1437:3:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1437:11:100"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1464:6:100"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1472:1:100"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1460:3:100"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1460:14:100"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1476:4:100",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1456:3:100"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1456:25:100"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1450:5:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1450:32:100"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1430:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1430:53:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1430:53:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1375:1:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1378:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1372:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1372:13:100"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1386:21:100",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1388:17:100",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1397:1:100"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1400:4:100",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1393:3:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1393:12:100"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1388:1:100"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1368:3:100",
                    "statements": []
                  },
                  "src": "1364:129:100"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:33:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1532:3:100"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1537:6:100"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1528:3:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1528:16:100"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "1546:3:100"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:29:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:29:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1508:1:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1511:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1505:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1505:13:100"
                  },
                  "nodeType": "YulIf",
                  "src": "1502:2:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1561:23:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1572:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1577:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1568:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:16:100"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1273:3:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1278:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1289:3:100",
                "type": ""
              }
            ],
            "src": "1160:430:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:249:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1786:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:21:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:21:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1820:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1831:2:100",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1816:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:18:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1836:2:100",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1809:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:30:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1809:30:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1859:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1870:2:100",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1855:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1855:18:100"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1875:34:100",
                        "type": "",
                        "value": "Cannot set a proxy implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1848:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:62:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1848:62:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1930:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1941:2:100",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1926:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:18:100"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1946:29:100",
                        "type": "",
                        "value": "n to a non-contract address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1919:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:57:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1919:57:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:27:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1997:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2008:3:100",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1993:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:19:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1985:4:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1746:9:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1760:4:100",
                "type": ""
              }
            ],
            "src": "1595:423:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2072:179:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2102:117:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "2123:4:100"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2133:3:100",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2138:10:100",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2129:3:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2129:20:100"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2116:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2116:34:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2116:34:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2170:1:100",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2173:4:100",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2163:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2163:15:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2163:15:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "2198:4:100"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2204:4:100",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2191:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2191:18:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2191:18:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2088:1:100"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2091:1:100"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2085:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2085:8:100"
                  },
                  "nodeType": "YulIf",
                  "src": "2082:2:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2228:17:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2240:1:100"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2243:1:100"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2236:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:9:100"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2228:4:100"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2054:1:100",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2057:1:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2063:4:100",
                "type": ""
              }
            ],
            "src": "2023:228:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2288:95:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2305:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2312:3:100",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2317:10:100",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2308:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2308:20:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:31:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2298:31:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:1:100",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:4:100",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:15:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:15:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2369:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2372:4:100",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2362:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2362:15:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2362:15:100"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2256:127:100"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value1)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Cannot set a proxy implementatio\")\n        mstore(add(headStart, 96), \"n to a non-contract address\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 100,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "264:962:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "264:962:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;498:11:6;:9;:11::i;:::-;264:962:5;859:365;;;;;;:::i;:::-;;:::i;2161:90:6:-;2197:15;:13;:15::i;:::-;2218:28;2228:17;:15;:17::i;:::-;2218:9;:28::i;:::-;2161:90::o;859:365:5:-;973:1;944:17;:15;:17::i;:::-;-1:-1:-1;;;;;944:31:5;;936:40;;;;;;1020:54;1073:1;1028:41;1020:54;:::i;:::-;812:66:2;989:86:5;982:94;;-1:-1:-1;;;982:94:5;;;;;;;;;1082:26;1101:6;1082:18;:26::i;:::-;1118:12;;:16;1114:106;;1145:12;1163:6;-1:-1:-1;;;;;1163:19:5;1183:5;1163:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:45;;;1205:7;1197:16;;;;;;1114:106;;859:365;;:::o;997:196:2:-;812:66;1172:11;;1156:33::o;997:816:6:-;1330:14;1327:1;1324;1311:34;1526:1;1523;1507:14;1504:1;1488:14;1481:5;1468:60;1590:16;1587:1;1584;1569:38;1622:6;1681:56;;;;1776:16;1773:1;1766:27;1681:56;1710:16;1707:1;1700:27;1607:334:2;1692:37;1711:17;1692:18;:37::i;:::-;1677:127;;;;-1:-1:-1;;;1677:127:2;;;;;;;:::i;:::-;;;;;;;;;812:66;1900:31;1892:45::o;685:586:1:-;745:4;1184:20;;1031:66;1223:23;;;;;;:42;;-1:-1:-1;1250:15:1;;;1223:42;1215:51;685:586;-1:-1:-1;;;;685:586:1:o;14:1141:100:-;;;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:23;;-1:-1:-1;;;;;256:31:100;;246:42;;236:2;;307:6;299;292:22;236:2;335:5;-1:-1:-1;359:2:100;397:18;;;384:32;435:18;465:14;;;462:2;;;497:6;489;482:22;462:2;540:6;529:9;525:22;515:32;;585:7;578:4;574:2;570:13;566:27;556:2;;612:6;604;597:22;556:2;653;640:16;675:2;671;668:10;665:2;;;681:18;;:::i;:::-;730:2;724:9;799:2;780:13;;-1:-1:-1;;776:27:100;764:40;;760:49;;824:18;;;844:22;;;821:46;818:2;;;870:18;;:::i;:::-;906:2;899:22;930:18;;;967:11;;;963:20;;960:33;-1:-1:-1;957:2:100;;;1011:6;1003;996:22;957:2;1072;1067;1063;1059:11;1054:2;1046:6;1042:15;1029:46;1117:6;1112:2;1107;1099:6;1095:15;1091:24;1084:40;1143:6;1133:16;;;;;;;110:1045;;;;;:::o;1160:430::-;;1327:6;1321:13;1352:3;1364:129;1378:6;1375:1;1372:13;1364:129;;;1476:4;1460:14;;;1456:25;;1450:32;1437:11;;;1430:53;1393:12;1364:129;;;1511:6;1508:1;1505:13;1502:2;;;1546:3;1537:6;1532:3;1528:16;1521:29;1502:2;-1:-1:-1;1568:16:100;;;;;1297:293;-1:-1:-1;;1297:293:100:o;1595:423::-;1797:2;1779:21;;;1836:2;1816:18;;;1809:30;1875:34;1870:2;1855:18;;1848:62;1946:29;1941:2;1926:18;;1919:57;2008:3;1993:19;;1769:249::o;2023:228::-;;2091:1;2088;2085:8;2082:2;;;-1:-1:-1;;;2116:34:100;;2173:4;2170:1;2163:15;2204:4;2123;2191:18;2082:2;-1:-1:-1;2236:9:100;;2072:179::o;2256:127::-;2317:10;2312:3;2308:20;2305:1;2298:31;2348:4;2345:1;2338:15;2372:4;2369:1;2362:15",
  "source": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableUpgradeabilityProxy\n * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n * implementation and init data.\n */\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract initializer.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(address _logic, bytes memory _data) public payable {\n    require(_implementation() == address(0));\n    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));\n    _setImplementation(_logic);\n    if (_data.length > 0) {\n      (bool success, ) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }\n}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/InitializableUpgradeabilityProxy.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/InitializableUpgradeabilityProxy.sol",
    "exportedSymbols": {
      "Address": [
        96
      ],
      "BaseUpgradeabilityProxy": [
        161
      ],
      "InitializableUpgradeabilityProxy": [
        324
      ],
      "Proxy": [
        372
      ]
    },
    "id": 325,
    "license": "agpl-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 263,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:5"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/BaseUpgradeabilityProxy.sol",
        "file": "./BaseUpgradeabilityProxy.sol",
        "id": 264,
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 162,
        "src": "62:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 266,
              "name": "BaseUpgradeabilityProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161,
              "src": "309:23:5"
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "309:23:5"
          }
        ],
        "contractDependencies": [
          161,
          372
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 265,
          "nodeType": "StructuredDocumentation",
          "src": "103:160:5",
          "text": " @title InitializableUpgradeabilityProxy\n @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n implementation and init data."
        },
        "fullyImplemented": true,
        "id": 324,
        "linearizedBaseContracts": [
          324,
          161,
          372
        ],
        "name": "InitializableUpgradeabilityProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "930:294:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 276,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              125
                            ],
                            "referencedDeclaration": 125,
                            "src": "944:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "944:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "973:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "965:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "965:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "965:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "944:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "936:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "936:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 286,
                          "name": "IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "989:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1038:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 291,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1028:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1028:41:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1020:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 289,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1020:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1020:50:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1073:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1020:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1012:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 287,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1012:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1012:63:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "989:86:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 285,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "982:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "982:94:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 302,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "1101:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 301,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1082:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:26:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 305,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "1118:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1118:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1118:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "1114:106:5",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "1136:84:5",
                    "statements": [
                      {
                        "assignments": [
                          310,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 310,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 320,
                            "src": "1145:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 309,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1145:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 315,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 313,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "1183:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 311,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1163:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "1163:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1144:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 317,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "1205:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 316,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1197:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1197:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:16:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "337:519:5",
              "text": " @dev Contract initializer.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
            },
            "functionSelector": "d1f57894",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "879:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "895:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:36:5"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:5"
            },
            "scope": 324,
            "src": "859:365:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 325,
        "src": "264:962:5"
      }
    ],
    "src": "37:1190:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/InitializableUpgradeabilityProxy.sol",
    "exportedSymbols": {
      "Address": [
        96
      ],
      "BaseUpgradeabilityProxy": [
        161
      ],
      "InitializableUpgradeabilityProxy": [
        324
      ],
      "Proxy": [
        372
      ]
    },
    "id": 325,
    "license": "agpl-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 263,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:5"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/aave/v2/dependencies/BaseUpgradeabilityProxy.sol",
        "file": "./BaseUpgradeabilityProxy.sol",
        "id": 264,
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 162,
        "src": "62:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 266,
              "name": "BaseUpgradeabilityProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161,
              "src": "309:23:5"
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "309:23:5"
          }
        ],
        "contractDependencies": [
          161,
          372
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 265,
          "nodeType": "StructuredDocumentation",
          "src": "103:160:5",
          "text": " @title InitializableUpgradeabilityProxy\n @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n implementation and init data."
        },
        "fullyImplemented": true,
        "id": 324,
        "linearizedBaseContracts": [
          324,
          161,
          372
        ],
        "name": "InitializableUpgradeabilityProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "930:294:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 276,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              125
                            ],
                            "referencedDeclaration": 125,
                            "src": "944:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "944:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "973:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "965:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "965:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "965:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "944:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "936:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "936:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 286,
                          "name": "IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "989:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1038:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 291,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1028:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1028:41:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1020:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 289,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1020:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1020:50:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1073:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1020:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1012:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 287,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1012:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1012:63:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "989:86:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 285,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "982:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "982:94:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 302,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "1101:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 301,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1082:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:26:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 305,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "1118:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1118:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1118:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "1114:106:5",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "1136:84:5",
                    "statements": [
                      {
                        "assignments": [
                          310,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 310,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 320,
                            "src": "1145:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 309,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1145:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 315,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 313,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "1183:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 311,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1163:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "1163:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1144:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 317,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "1205:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 316,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1197:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1197:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:16:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "337:519:5",
              "text": " @dev Contract initializer.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
            },
            "functionSelector": "d1f57894",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "879:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "895:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:36:5"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:5"
            },
            "scope": 324,
            "src": "859:365:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 325,
        "src": "264:962:5"
      }
    ],
    "src": "37:1190:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-31T20:20:03.575Z",
  "devdoc": {
    "details": "Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.",
    "kind": "dev",
    "methods": {
      "initialize(address,bytes)": {
        "details": "Contract initializer.",
        "params": {
          "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
          "_logic": "Address of the initial implementation."
        }
      }
    },
    "title": "InitializableUpgradeabilityProxy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}