{
  "contractName": "ComptrollerV5Storage",
  "abi": [
    {
      "inputs": [],
      "name": "_borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accountAssets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allMarkets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowCapGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowCaps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowerIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compContributorSpeeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSpeeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplierIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplyState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "comptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastContributorBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationIncentiveMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isComped",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingComptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seizeGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountAssets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allMarkets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowCapGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowCaps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compContributorSpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplyState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastContributorBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationIncentiveMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isComped\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingComptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seizeGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accountAssets(address,uint256)\":{\"notice\":\"Per-account mapping of \\\"assets you are in\\\", capped by maxAssets\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"allMarkets(uint256)\":{\"notice\":\"A list of all markets\"},\"closeFactorMantissa()\":{\"notice\":\"Multiplier used to calculate the maximum repayAmount when liquidating a borrow\"},\"compAccrued(address)\":{\"notice\":\"The COMP accrued but not yet transferred to each user\"},\"compBorrowState(address)\":{\"notice\":\"The COMP market borrow state for each market\"},\"compBorrowerIndex(address,address)\":{\"notice\":\"The COMP borrow index for each market for each borrower as of the last time they accrued COMP\"},\"compContributorSpeeds(address)\":{\"notice\":\"The portion of COMP that each contributor receives per block\"},\"compRate()\":{\"notice\":\"The rate at which the flywheel distributes COMP, per block\"},\"compSpeeds(address)\":{\"notice\":\"The portion of compRate that each market currently receives\"},\"compSupplierIndex(address,address)\":{\"notice\":\"The COMP borrow index for each market for each supplier as of the last time they accrued COMP\"},\"compSupplyState(address)\":{\"notice\":\"The COMP market supply state for each market\"},\"comptrollerImplementation()\":{\"notice\":\"Active brains of Unitroller\"},\"lastContributorBlock(address)\":{\"notice\":\"Last block at which a contributor's COMP rewards have been allocated\"},\"liquidationIncentiveMantissa()\":{\"notice\":\"Multiplier representing the discount on collateral that a liquidator receives\"},\"markets(address)\":{\"notice\":\"Official mapping of cTokens -> Market metadata\"},\"maxAssets()\":{\"notice\":\"Max number of assets a single account can participate in (borrow or use as collateral)\"},\"oracle()\":{\"notice\":\"Oracle which gives the price of any given asset\"},\"pauseGuardian()\":{\"notice\":\"The Pause Guardian can pause certain actions as a safety mechanism.  Actions which allow users to remove their own assets cannot be paused.  Liquidation / seizing / transfer can only be paused globally, not by market.\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"pendingComptrollerImplementation()\":{\"notice\":\"Pending brains of Unitroller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV5Storage.sol\":\"ComptrollerV5Storage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/CToken.sol\":{\"keccak256\":\"0x136894a7a8518c5cac999d258b916502d3b8b65f485cd8a7c636ad2858cf5691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97bb7e779b564408cadc9545953f97321d2a95ea5c95f07214b4e3e06f55425f\",\"dweb:/ipfs/QmNR27j2Qg4vkuXd91eCesR81rHSQ6q7gCK8TtdRBkdsGR\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV1Storage.sol\":{\"keccak256\":\"0x654e9834bfd3bcd01555b2c873061158898989e0e1a6b25f33ee233f6d623d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1c40bf0c27b8d5068d251cde0317eb72130d0b281fe8eab85a4bc914f1913e6\",\"dweb:/ipfs/QmcDxPu3Ds3EFPbdArCw5Hc3ZxBXHbk7rG9SXUszNcjbYU\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV2Storage.sol\":{\"keccak256\":\"0x855d1ab6a75ea881ae019027fb799e8d849cea20cfbc8b8689224d893d7d99ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ebc834ef0cba7472992c1dd52743c7f77d978ee69e1cbf3e55fcf8f5771f921\",\"dweb:/ipfs/QmSXACRASDHXen7wguFQhUFVyRSrZCGukjyGDEjQxNySQ8\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV3Storage.sol\":{\"keccak256\":\"0xf308947d0c9fe3a774ba0392a967d5ac393682454817b8122f790ab3fd0fc738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://443d013218e60978cce136e5cc73c4d29d9fdf18a4cec48833737758567eed93\",\"dweb:/ipfs/QmZmjMjPyqBUobSzJQGfoacnDM8pAmUe2wH5wCFKSRkTRE\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV4Storage.sol\":{\"keccak256\":\"0x765e5739b877015b2b356eed72ca4e6dcfda53cf6906678c241ee2049b4210ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff80ab07de41825f453125e418d786ee81766f68f47615cb4dee54dac6e3c11f\",\"dweb:/ipfs/QmPBc8pbyHhcXbL2a7YEcQDs2wVrE1ygehLEfFtXWUPfRB\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV5Storage.sol\":{\"keccak256\":\"0x0d1bb002945aa95f2ba025c26e56d145ac474f7ec853f17d38aba0eb45ba327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5edd1ff933607ee16ea0ad70180892df52e36f56cadd2a81ee04aeea4a0e777f\",\"dweb:/ipfs/QmUXuvXPshnr6yzb6qh3eMsTq16tGciPguTQbFwnY8fPwT\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/Market.sol\":{\"keccak256\":\"0xe26f638679806e748014267d450d66c533c225200ab09c659c1c25e67bb25c25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8789dac21968e2a693698d24a70a550e12a77d783ecc6d966f71b575577f0d1e\",\"dweb:/ipfs/QmSwBHJXvxA5QJK2VfafdgKo4Ca1FF9EDX57J5JHiKBNka\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/UnitrollerAdminStorage.sol\":{\"keccak256\":\"0xd50b29234e3801c72bb5c3ccfad374de90daea3b397105f27d5c1bff9bc6b3a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393f35359daf3644c2b333e1774701c5473dcd5087a721c1fd31a419f03794fe\",\"dweb:/ipfs/QmVxYFKdiBkpF9PaFkfCwWy3MNmYLZcYYqMwwVkH789cFk\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CTokenInterface.sol\":{\"keccak256\":\"0xba0dfb7800f21b670add93b7aeb631978c8212778a25567c84d9fb174aead66a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f31d01c0b27e34c56b2036d8476b70e62a0a67920df9d01ba827bddbb0a00ae\",\"dweb:/ipfs/QmXvNaLxHy2UvQczTyRy9RKico3N2u4DomDzvQJ5o7R9dv\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/CTokenStorage.sol\":{\"keccak256\":\"0xad89d9fe1585f18620574e12d42cf30fdd9cfc9e54546593727d66283b3083c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22656d5168f793f1d5da3ad4114e2812347b6b9976fe2a72d6e306659e77419b\",\"dweb:/ipfs/QmcvwzUEJfoTz7apyU18PeWQ5doExtpFgeR9zpKyvR1LMe\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/interfaces/ComptrollerInterface.sol\":{\"keccak256\":\"0x83b61b9455d5e7adde8528b371fffb3b59d51c43756d39a74f5e1016dac45460\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dbd9d8667e12f393c30ef9c9f994b837ee25fd1ce9b27702a9a9695283133bf\",\"dweb:/ipfs/QmVvPY8K4nDcmxpqJ6ctg6xiMeT4psp5kASnZWrdFgPMvE\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/CarefulMath.sol\":{\"keccak256\":\"0x4dcca42181961bb0a02800fe7397ab080693f303d4a363041cf77548b482db1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e1c0f00336a64b90f75c41ff40021f28ae62657842469c897a405eb70aebba2\",\"dweb:/ipfs/Qma6pam7zLnBRvNCuohZMMTuUXZfxGgyP6uJbhdw1GxDBf\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/Exponential.sol\":{\"keccak256\":\"0x4994f84324a16ac8be78412ea6c8d44af52b2b637272ca1c06fac427519c2dc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f6d7e791478b26aa5b0984f5128a525b5120a45ea656c388d70dd7ef70ab67\",\"dweb:/ipfs/QmWCtxSiCVksTJqFzAZvk38mKExPswgMhv1LwCdJUy6emT\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/maths/ExponentialNoError.sol\":{\"keccak256\":\"0x3555785e8b11febebebd739f2a7359ecdf686f08c051e45a63eca4b466e566fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce8089889735b61d82bc2fb6acf55e25be8605df26f6778d285dab28d4f6fed7\",\"dweb:/ipfs/Qmf3jpbr2hBfukdxFhNABTCm87zasK6d96AVbWkd1DG4KF\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/oracles/PriceOracle.sol\":{\"keccak256\":\"0xa058e3e48bf23659ddf996178223fb8dc5b8c41873ed74dca46694eb5ad46bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4e3b3db39ecedfd997b4fdd36a5f973b0d3f513a86d1bbcf49e166d70dfa0d4\",\"dweb:/ipfs/QmV8HWupWwRQ68Cp177DLtV4w973vXFyYzNo4nS4hgiSK8\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/rates/InterestRateModel.sol\":{\"keccak256\":\"0x5e3aab023ea82ec7c73b832f249db181054eca0ae8734b6bcd041d5923925a81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af53449409fa31d44df7ff7c7367ef16395c535860fec7747cc3bd3bf2bae6d5\",\"dweb:/ipfs/QmNodvzeHPnciHBjJzqjcRyjaDNntTdBzCxAFQBcKS1u4X\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/reporters/TokenErrorReporter.sol\":{\"keccak256\":\"0xd14c63292c7881e0d8455d60fc91751bde796df8fc25412d693a335ef5e619a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aff494ba85779176da6f24dbfda3edc6a9e03633e8e89a63f53fdc431272d297\",\"dweb:/ipfs/QmYsQC6mUy2AvHTLE2WhaizmC44RgvoEqdPEPAn2eviVFD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610745806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638e8f294b11610104578063bea6b8b8116100a2578063dcfbc0c711610071578063dcfbc0c714610383578063e6653f3d1461038b578063e875544614610393578063f851a4401461039b576101cf565b8063bea6b8b814610337578063ca0af0431461034a578063cc7ebdc41461035d578063dce1544914610370576101cf565b8063aa900754116100de578063aa9007541461030c578063ac0b0bb714610314578063b21be7fd1461031c578063bb82aa5e1461032f576101cf565b80638e8f294b146102cf57806394b2294b146102f1578063986ab838146102f9576101cf565b806352d84d1e11610171578063731f0c2b1161014b578063731f0c2b146102995780637dc0d1d0146102ac57806387f76303146102b45780638c57804e146102bc576101cf565b806352d84d1e146102525780636b79c38d146102655780636d154ea514610286576101cf565b806326782247116101ad578063267822471461021a5780633c94786f146102225780634a584432146102375780634ada90af1461024a576101cf565b80631d7b33d7146101d457806321af4569146101fd57806324a3d62214610212575b600080fd5b6101e76101e236600461061a565b6103a3565b6040516101f49190610706565b60405180910390f35b6102056103b5565b6040516101f491906106ae565b6102056103c4565b6102056103d3565b61022a6103e2565b6040516101f491906106c2565b6101e761024536600461061a565b6103f2565b6101e7610404565b610205610260366004610696565b61040a565b61027861027336600461061a565b610434565b6040516101f49291906106e7565b61022a61029436600461061a565b61045e565b61022a6102a736600461061a565b610473565b610205610488565b61022a610497565b6102786102ca36600461061a565b6104a7565b6102e26102dd36600461061a565b6104d1565b6040516101f4939291906106cd565b6101e76104f7565b6101e761030736600461061a565b6104fd565b6101e761050f565b61022a610515565b6101e761032a36600461063b565b610525565b610205610542565b6101e761034536600461061a565b610551565b6101e761035836600461063b565b610563565b6101e761036b36600461061a565b610580565b61020561037e36600461066d565b610592565b6102056105ca565b61022a6105d9565b6101e76105e9565b6102056105ef565b600f6020526000908152604090205481565b6015546001600160a01b031681565b600a546001600160a01b031681565b6001546001600160a01b031681565b600a54600160a01b900460ff1681565b60166020526000908152604090205481565b60065481565b600d818154811061041a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6010602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b600c6020526000908152604090205460ff1681565b600b6020526000908152604090205460ff1681565b6004546001600160a01b031681565b600a54600160b01b900460ff1681565b6011602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b60096020526000908152604090208054600182015460039092015460ff91821692911683565b60075481565b60176020526000908152604090205481565b600e5481565b600a54600160b81b900460ff1681565b601260209081526000928352604080842090915290825290205481565b6002546001600160a01b031681565b60186020526000908152604090205481565b601360209081526000928352604080842090915290825290205481565b60146020526000908152604090205481565b600860205281600052604060002081815481106105ae57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b600a54600160a81b900460ff1681565b60055481565b6000546001600160a01b031681565b80356001600160a01b038116811461061557600080fd5b919050565b60006020828403121561062b578081fd5b610634826105fe565b9392505050565b6000806040838503121561064d578081fd5b610656836105fe565b9150610664602084016105fe565b90509250929050565b6000806040838503121561067f578182fd5b610688836105fe565b946020939093013593505050565b6000602082840312156106a7578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b921515835260208301919091521515604082015260600190565b6001600160e01b0392909216825263ffffffff16602082015260400190565b9081526020019056fea26469706673582212209c252e96ba8f134f976f4a12e24177891016c71e84bad18bec77275ce57e96b964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638e8f294b11610104578063bea6b8b8116100a2578063dcfbc0c711610071578063dcfbc0c714610383578063e6653f3d1461038b578063e875544614610393578063f851a4401461039b576101cf565b8063bea6b8b814610337578063ca0af0431461034a578063cc7ebdc41461035d578063dce1544914610370576101cf565b8063aa900754116100de578063aa9007541461030c578063ac0b0bb714610314578063b21be7fd1461031c578063bb82aa5e1461032f576101cf565b80638e8f294b146102cf57806394b2294b146102f1578063986ab838146102f9576101cf565b806352d84d1e11610171578063731f0c2b1161014b578063731f0c2b146102995780637dc0d1d0146102ac57806387f76303146102b45780638c57804e146102bc576101cf565b806352d84d1e146102525780636b79c38d146102655780636d154ea514610286576101cf565b806326782247116101ad578063267822471461021a5780633c94786f146102225780634a584432146102375780634ada90af1461024a576101cf565b80631d7b33d7146101d457806321af4569146101fd57806324a3d62214610212575b600080fd5b6101e76101e236600461061a565b6103a3565b6040516101f49190610706565b60405180910390f35b6102056103b5565b6040516101f491906106ae565b6102056103c4565b6102056103d3565b61022a6103e2565b6040516101f491906106c2565b6101e761024536600461061a565b6103f2565b6101e7610404565b610205610260366004610696565b61040a565b61027861027336600461061a565b610434565b6040516101f49291906106e7565b61022a61029436600461061a565b61045e565b61022a6102a736600461061a565b610473565b610205610488565b61022a610497565b6102786102ca36600461061a565b6104a7565b6102e26102dd36600461061a565b6104d1565b6040516101f4939291906106cd565b6101e76104f7565b6101e761030736600461061a565b6104fd565b6101e761050f565b61022a610515565b6101e761032a36600461063b565b610525565b610205610542565b6101e761034536600461061a565b610551565b6101e761035836600461063b565b610563565b6101e761036b36600461061a565b610580565b61020561037e36600461066d565b610592565b6102056105ca565b61022a6105d9565b6101e76105e9565b6102056105ef565b600f6020526000908152604090205481565b6015546001600160a01b031681565b600a546001600160a01b031681565b6001546001600160a01b031681565b600a54600160a01b900460ff1681565b60166020526000908152604090205481565b60065481565b600d818154811061041a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6010602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b600c6020526000908152604090205460ff1681565b600b6020526000908152604090205460ff1681565b6004546001600160a01b031681565b600a54600160b01b900460ff1681565b6011602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b60096020526000908152604090208054600182015460039092015460ff91821692911683565b60075481565b60176020526000908152604090205481565b600e5481565b600a54600160b81b900460ff1681565b601260209081526000928352604080842090915290825290205481565b6002546001600160a01b031681565b60186020526000908152604090205481565b601360209081526000928352604080842090915290825290205481565b60146020526000908152604090205481565b600860205281600052604060002081815481106105ae57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b600a54600160a81b900460ff1681565b60055481565b6000546001600160a01b031681565b80356001600160a01b038116811461061557600080fd5b919050565b60006020828403121561062b578081fd5b610634826105fe565b9392505050565b6000806040838503121561064d578081fd5b610656836105fe565b9150610664602084016105fe565b90509250929050565b6000806040838503121561067f578182fd5b610688836105fe565b946020939093013593505050565b6000602082840312156106a7578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b921515835260208301919091521515604082015260600190565b6001600160e01b0392909216825263ffffffff16602082015260400190565b9081526020019056fea26469706673582212209c252e96ba8f134f976f4a12e24177891016c71e84bad18bec77275ce57e96b964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2812:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:66"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:66"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:66",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:66",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:66"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:66"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:66",
                "type": ""
              }
            ],
            "src": "14:175:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:66",
                "type": ""
              }
            ],
            "src": "194:198:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:66"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:66",
                "type": ""
              }
            ],
            "src": "397:274:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:179:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "818:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "826:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "784:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "773:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "844:41:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "854:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:31:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "844:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "894:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "921:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "932:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "917:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "904:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "894:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "721:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "732:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "744:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "752:6:66",
                "type": ""
              }
            ],
            "src": "676:266:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1017:120:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1063:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1072:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1080:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1065:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1065:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1065:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1038:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1047:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1059:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1030:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1030:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1027:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1121:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1108:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1098:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "983:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "994:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1006:6:66",
                "type": ""
              }
            ],
            "src": "947:190:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:102:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1265:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1261:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1253:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1295:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1310:6:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1326:3:66",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1331:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1322:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1322:11:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1335:1:66",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1318:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1318:19:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1306:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1306:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1288:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1288:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1288:51:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1234:4:66",
                "type": ""
              }
            ],
            "src": "1142:203:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1445:92:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1455:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1467:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1478:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1463:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1455:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1497:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1522:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1515:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1515:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1508:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1508:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1490:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1490:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1490:41:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1414:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1425:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1436:4:66",
                "type": ""
              }
            ],
            "src": "1350:187:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:194:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1709:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1697:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1739:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1764:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1757:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1757:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1750:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:41:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1793:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1804:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1789:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1789:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1809:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1782:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1782:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1847:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1832:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1832:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "1866:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1859:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1859:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1852:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1825:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:50:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1825:50:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1640:9:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1651:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1659:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1667:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1678:4:66",
                "type": ""
              }
            ],
            "src": "1542:339:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2003:102:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2036:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2021:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2013:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2055:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2070:6:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2086:3:66",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2091:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:11:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2095:1:66",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2078:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2078:19:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2048:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2048:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2048:51:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CToken_$13498__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1972:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1983:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1994:4:66",
                "type": ""
              }
            ],
            "src": "1886:219:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2232:102:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2242:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2250:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2250:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2242:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2284:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2299:6:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2315:3:66",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2320:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2311:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2311:11:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2324:1:66",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2307:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2307:19:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2295:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2295:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:51:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PriceOracle_$25206__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2201:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2212:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2223:4:66",
                "type": ""
              }
            ],
            "src": "2110:224:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:162:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2533:6:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2549:3:66",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2554:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2545:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2545:11:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2558:1:66",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2541:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2541:19:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2529:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2529:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:51:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2582:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2593:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2578:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2602:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2610:10:66",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2598:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:23:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2571:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2571:51:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint224_t_uint32__to_t_uint224_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2427:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2438:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:66",
                "type": ""
              }
            ],
            "src": "2339:289:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2734:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2744:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2756:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2767:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2752:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2744:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2786:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2797:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2779:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2703:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2714:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2725:4:66",
                "type": ""
              }
            ],
            "src": "2633:177:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_contract$_CToken_$13498__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_PriceOracle_$25206__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint224_t_uint32__to_t_uint224_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(224, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "97:337:45:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "97:337:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:42:43;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:32:44;;;:::i;:::-;;;;;;;:::i;645:28:42:-;;;:::i;329:27:47:-;;;:::i;679:31:42:-;;;:::i;:::-;;;;;;;:::i;497:42:44:-;;;;;;:::i;:::-;;:::i;569:40:41:-;;;:::i;285:26:43:-;;;;;;:::i;:::-;;:::i;606:58::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;888:52:42:-;;;;;;:::i;:::-;;:::i;832:50::-;;;;;;:::i;:::-;;:::i;280:25:41:-;;;:::i;755:34:42:-;;;:::i;732:58:43:-;;;;;;:::i;:::-;;:::i;333:41:42:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;734:21:41:-;;;:::i;234:53:45:-;;;;;;:::i;:::-;;:::i;393:20:43:-;;;:::i;795:31:42:-;;;:::i;907:69:43:-;;;;;;:::i;:::-;;:::i;420:40:47:-;;;:::i;379:52:45:-;;;;;;:::i;:::-;;:::i;1093:69:43:-;;;;;;:::i;:::-;;:::i;1239:43::-;;;;;;:::i;:::-;;:::i;857:49:41:-;;;;;;:::i;:::-;;:::i;525:47:47:-;;;:::i;716:33:42:-;;;:::i;422:31:41:-;;;:::i;233:20:47:-;;;:::i;496:42:43:-;;;;;;;;;;;;;:::o;321:32:44:-;;;-1:-1:-1;;;;;321:32:44;;:::o;645:28:42:-;;;-1:-1:-1;;;;;645:28:42;;:::o;329:27:47:-;;;-1:-1:-1;;;;;329:27:47;;:::o;679:31:42:-;;;-1:-1:-1;;;679:31:42;;;;;:::o;497:42:44:-;;;;;;;;;;;;;:::o;569:40:41:-;;;;:::o;285:26:43:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;285:26:43;;-1:-1:-1;285:26:43;:::o;606:58::-;;;;;;;;;;;;-1:-1:-1;;;;;606:58:43;;;-1:-1:-1;;;606:58:43;;;;;:::o;888:52:42:-;;;;;;;;;;;;;;;:::o;832:50::-;;;;;;;;;;;;;;;:::o;280:25:41:-;;;-1:-1:-1;;;;;280:25:41;;:::o;755:34:42:-;;;-1:-1:-1;;;755:34:42;;;;;:::o;732:58:43:-;;;;;;;;;;;;-1:-1:-1;;;;;732:58:43;;;-1:-1:-1;;;732:58:43;;;;;:::o;333:41:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;734:21:41:-;;;;:::o;234:53:45:-;;;;;;;;;;;;;:::o;393:20:43:-;;;;:::o;795:31:42:-;;;-1:-1:-1;;;795:31:42;;;;;:::o;907:69:43:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;420:40:47:-;;;-1:-1:-1;;;;;420:40:47;;:::o;379:52:45:-;;;;;;;;;;;;;:::o;1093:69:43:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1239:43::-;;;;;;;;;;;;;:::o;857:49:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;857:49:41;;-1:-1:-1;857:49:41;;-1:-1:-1;857:49:41:o;525:47:47:-;;;-1:-1:-1;;;;;525:47:47;;:::o;716:33:42:-;;;-1:-1:-1;;;716:33:42;;;;;:::o;422:31:41:-;;;;:::o;233:20:47:-;;;-1:-1:-1;;;;;233:20:47;;:::o;14:175:66:-;84:20;;-1:-1:-1;;;;;133:31:66;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:66:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:266::-;;;805:2;793:9;784:7;780:23;776:32;773:2;;;826:6;818;811:22;773:2;854:31;875:9;854:31;:::i;:::-;844:41;932:2;917:18;;;;904:32;;-1:-1:-1;;;763:179:66:o;947:190::-;;1059:2;1047:9;1038:7;1034:23;1030:32;1027:2;;;1080:6;1072;1065:22;1027:2;-1:-1:-1;1108:23:66;;1017:120;-1:-1:-1;1017:120:66:o;1142:203::-;-1:-1:-1;;;;;1306:32:66;;;;1288:51;;1276:2;1261:18;;1243:102::o;1350:187::-;1515:14;;1508:22;1490:41;;1478:2;1463:18;;1445:92::o;1542:339::-;1757:14;;1750:22;1732:41;;1804:2;1789:18;;1782:34;;;;1859:14;1852:22;1847:2;1832:18;;1825:50;1720:2;1705:18;;1687:194::o;2339:289::-;-1:-1:-1;;;;;2529:32:66;;;;2511:51;;2610:10;2598:23;2593:2;2578:18;;2571:51;2499:2;2484:18;;2466:162::o;2633:177::-;2779:25;;;2767:2;2752:18;;2734:76::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ComptrollerV4Storage.sol\";\n\n\n\ncontract ComptrollerV5Storage is ComptrollerV4Storage {\n    /// @notice The portion of COMP that each contributor receives per block\n    mapping(address => uint) public compContributorSpeeds;\n\n    /// @notice Last block at which a contributor's COMP rewards have been allocated\n    mapping(address => uint) public lastContributorBlock;\n}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV5Storage.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV5Storage.sol",
    "exportedSymbols": {
      "CToken": [
        13498
      ],
      "CTokenInterface": [
        23101
      ],
      "CTokenStorage": [
        23176
      ],
      "CarefulMath": [
        23581
      ],
      "ComptrollerInterface": [
        23384
      ],
      "ComptrollerV1Storage": [
        21359
      ],
      "ComptrollerV2Storage": [
        21391
      ],
      "ComptrollerV3Storage": [
        21446
      ],
      "ComptrollerV4Storage": [
        21458
      ],
      "ComptrollerV5Storage": [
        21474
      ],
      "Exponential": [
        24174
      ],
      "ExponentialNoError": [
        24928
      ],
      "InterestRateModel": [
        25240
      ],
      "Market": [
        21487
      ],
      "PriceOracle": [
        25206
      ],
      "TokenErrorReporter": [
        25770
      ],
      "UnitrollerAdminStorage": [
        21504
      ]
    },
    "id": 21475,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21460,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV4Storage.sol",
        "file": "./ComptrollerV4Storage.sol",
        "id": 21461,
        "nodeType": "ImportDirective",
        "scope": 21475,
        "sourceUnit": 21459,
        "src": "57:36:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21462,
              "name": "ComptrollerV4Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21458,
              "src": "130:20:45"
            },
            "id": 21463,
            "nodeType": "InheritanceSpecifier",
            "src": "130:20:45"
          }
        ],
        "contractDependencies": [
          21359,
          21391,
          21446,
          21458,
          21504
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21474,
        "linearizedBaseContracts": [
          21474,
          21458,
          21446,
          21391,
          21359,
          21504
        ],
        "name": "ComptrollerV5Storage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 21464,
              "nodeType": "StructuredDocumentation",
              "src": "157:72:45",
              "text": "@notice The portion of COMP that each contributor receives per block"
            },
            "functionSelector": "986ab838",
            "id": 21468,
            "mutability": "mutable",
            "name": "compContributorSpeeds",
            "nodeType": "VariableDeclaration",
            "scope": 21474,
            "src": "234:53:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21467,
              "keyType": {
                "id": 21465,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21466,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "253:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21469,
              "nodeType": "StructuredDocumentation",
              "src": "294:80:45",
              "text": "@notice Last block at which a contributor's COMP rewards have been allocated"
            },
            "functionSelector": "bea6b8b8",
            "id": 21473,
            "mutability": "mutable",
            "name": "lastContributorBlock",
            "nodeType": "VariableDeclaration",
            "scope": 21474,
            "src": "379:52:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21472,
              "keyType": {
                "id": 21470,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "379:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21471,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "398:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 21475,
        "src": "97:337:45"
      }
    ],
    "src": "32:403:45"
  },
  "legacyAST": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV5Storage.sol",
    "exportedSymbols": {
      "CToken": [
        13498
      ],
      "CTokenInterface": [
        23101
      ],
      "CTokenStorage": [
        23176
      ],
      "CarefulMath": [
        23581
      ],
      "ComptrollerInterface": [
        23384
      ],
      "ComptrollerV1Storage": [
        21359
      ],
      "ComptrollerV2Storage": [
        21391
      ],
      "ComptrollerV3Storage": [
        21446
      ],
      "ComptrollerV4Storage": [
        21458
      ],
      "ComptrollerV5Storage": [
        21474
      ],
      "Exponential": [
        24174
      ],
      "ExponentialNoError": [
        24928
      ],
      "InterestRateModel": [
        25240
      ],
      "Market": [
        21487
      ],
      "PriceOracle": [
        25206
      ],
      "TokenErrorReporter": [
        25770
      ],
      "UnitrollerAdminStorage": [
        21504
      ]
    },
    "id": 21475,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21460,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/contracts/compound/v2.1/comptroller/storage/ComptrollerV4Storage.sol",
        "file": "./ComptrollerV4Storage.sol",
        "id": 21461,
        "nodeType": "ImportDirective",
        "scope": 21475,
        "sourceUnit": 21459,
        "src": "57:36:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21462,
              "name": "ComptrollerV4Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21458,
              "src": "130:20:45"
            },
            "id": 21463,
            "nodeType": "InheritanceSpecifier",
            "src": "130:20:45"
          }
        ],
        "contractDependencies": [
          21359,
          21391,
          21446,
          21458,
          21504
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21474,
        "linearizedBaseContracts": [
          21474,
          21458,
          21446,
          21391,
          21359,
          21504
        ],
        "name": "ComptrollerV5Storage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 21464,
              "nodeType": "StructuredDocumentation",
              "src": "157:72:45",
              "text": "@notice The portion of COMP that each contributor receives per block"
            },
            "functionSelector": "986ab838",
            "id": 21468,
            "mutability": "mutable",
            "name": "compContributorSpeeds",
            "nodeType": "VariableDeclaration",
            "scope": 21474,
            "src": "234:53:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21467,
              "keyType": {
                "id": 21465,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21466,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "253:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21469,
              "nodeType": "StructuredDocumentation",
              "src": "294:80:45",
              "text": "@notice Last block at which a contributor's COMP rewards have been allocated"
            },
            "functionSelector": "bea6b8b8",
            "id": 21473,
            "mutability": "mutable",
            "name": "lastContributorBlock",
            "nodeType": "VariableDeclaration",
            "scope": 21474,
            "src": "379:52:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21472,
              "keyType": {
                "id": 21470,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "379:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21471,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "398:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 21475,
        "src": "97:337:45"
      }
    ],
    "src": "32:403:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T18:51:08.345Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accountAssets(address,uint256)": {
        "notice": "Per-account mapping of \"assets you are in\", capped by maxAssets"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "allMarkets(uint256)": {
        "notice": "A list of all markets"
      },
      "closeFactorMantissa()": {
        "notice": "Multiplier used to calculate the maximum repayAmount when liquidating a borrow"
      },
      "compAccrued(address)": {
        "notice": "The COMP accrued but not yet transferred to each user"
      },
      "compBorrowState(address)": {
        "notice": "The COMP market borrow state for each market"
      },
      "compBorrowerIndex(address,address)": {
        "notice": "The COMP borrow index for each market for each borrower as of the last time they accrued COMP"
      },
      "compContributorSpeeds(address)": {
        "notice": "The portion of COMP that each contributor receives per block"
      },
      "compRate()": {
        "notice": "The rate at which the flywheel distributes COMP, per block"
      },
      "compSpeeds(address)": {
        "notice": "The portion of compRate that each market currently receives"
      },
      "compSupplierIndex(address,address)": {
        "notice": "The COMP borrow index for each market for each supplier as of the last time they accrued COMP"
      },
      "compSupplyState(address)": {
        "notice": "The COMP market supply state for each market"
      },
      "comptrollerImplementation()": {
        "notice": "Active brains of Unitroller"
      },
      "lastContributorBlock(address)": {
        "notice": "Last block at which a contributor's COMP rewards have been allocated"
      },
      "liquidationIncentiveMantissa()": {
        "notice": "Multiplier representing the discount on collateral that a liquidator receives"
      },
      "markets(address)": {
        "notice": "Official mapping of cTokens -> Market metadata"
      },
      "maxAssets()": {
        "notice": "Max number of assets a single account can participate in (borrow or use as collateral)"
      },
      "oracle()": {
        "notice": "Oracle which gives the price of any given asset"
      },
      "pauseGuardian()": {
        "notice": "The Pause Guardian can pause certain actions as a safety mechanism.  Actions which allow users to remove their own assets cannot be paused.  Liquidation / seizing / transfer can only be paused globally, not by market."
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "pendingComptrollerImplementation()": {
        "notice": "Pending brains of Unitroller"
      }
    },
    "version": 1
  }
}