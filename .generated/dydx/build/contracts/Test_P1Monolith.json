{
  "contractName": "Test_P1Monolith",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "TRADER_FLAG_RESULT_2",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_FUNDING_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_FUNDING_IS_POSITIVE_",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_PRICE_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_TRADE_RESULT_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "traderFlags",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_TRADE_RESULT_2_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "traderFlags",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getFunding",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPositive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "newFunding",
          "type": "uint256"
        }
      ],
      "name": "setFunding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "traderFlags",
          "type": "bytes32"
        }
      ],
      "name": "setSecondTradeResult",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "traderFlags",
          "type": "bytes32"
        }
      ],
      "name": "setTradeResult",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "traderFlags",
          "type": "bytes32"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "marginAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "traderFlags",
              "type": "bytes32"
            }
          ],
          "internalType": "struct P1Types.TradeResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"TRADER_FLAG_RESULT_2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_FUNDING_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_FUNDING_IS_POSITIVE_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_PRICE_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_TRADE_RESULT_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_TRADE_RESULT_2_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getFunding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"newFunding\",\"type\":\"uint256\"}],\"name\":\"setFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"name\":\"setSecondTradeResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"name\":\"setTradeResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"traderFlags\",\"type\":\"bytes32\"}],\"internalType\":\"struct P1Types.TradeResult\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX\",\"methods\":{},\"title\":\"Test_P1Monolith\"},\"userdoc\":{\"methods\":{\"setSecondTradeResult(uint256,uint256,bool,bytes32)\":{\"notice\":\"Sets a second trade result which can be triggered by the trader flags of the first trade.\"}},\"notice\":\"A second contract for testing the funder, oracle, and trader.\"}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Monolith.sol\":\"Test_P1Monolith\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/protocol/v1/intf/I_P1Funder.sol\":{\"keccak256\":\"0x94b87bb2acc52ad7538f25cca68510f72065b8054effc2257c800d5b471a495b\",\"urls\":[\"bzz-raw://95dc30b18d04f96c25e899eda92edb816bdf63e14dbf63a1a86b0a80682f6984\",\"dweb:/ipfs/QmeCXnbuNF9AAMcALPD1hgx1LQ9Cp2vh7NwAHvoVmyyboR\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/protocol/v1/intf/I_P1Oracle.sol\":{\"keccak256\":\"0xae11b90feaf832f8c0ab6e4ccb4fd20353fc866886c0bfeb5e1d919e150c7752\",\"urls\":[\"bzz-raw://392ab0388dfa24821b9a54c4d5c7581284005637991dd715240f6db3a4c57318\",\"dweb:/ipfs/QmVAAiM5o64UqQeL3n25aaPodsDUd7xHosRL31ccHnyYoE\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/protocol/v1/intf/I_P1Trader.sol\":{\"keccak256\":\"0x25bc69198c64af3e72f16b852f8931fbd7aa4517dd2b62b9d6ec93e81edfc9f3\",\"urls\":[\"bzz-raw://6714a58bc0f4b1ba0965a6f698c06a50fdb3c88c91438850a95ebf3e7307c4c1\",\"dweb:/ipfs/QmTQQdUGS6WALWJMKkgXLSFFzcsHKwsWZiYkd9YcReX4td\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/protocol/v1/lib/P1Types.sol\":{\"keccak256\":\"0x4c06a8f9779e4a2975ceb5e05583c10309d1979814c7d408ee9045b5c896f8d2\",\"urls\":[\"bzz-raw://2231570e2572d884876eb5c443e4ae59cf8168d8f0e33cc38ebf88497ae65def\",\"dweb:/ipfs/QmWWpyL1P7nUVnpXEULTqCTTvsKSNwnRRvB4kFCuJeMGGo\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Funder.sol\":{\"keccak256\":\"0x6a8a8e072f12dcfbdf264e22d191eda1a989b855ff175dd59cbc4ebac1f29624\",\"urls\":[\"bzz-raw://5df02d45bbda5edd9e6fb92769f2697743328018a83ac4e50c3a605365b2f842\",\"dweb:/ipfs/QmTUzCXCu4sLAfZ4qRnSqzBJgUkydpJqPekB1FsVkYbedM\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Monolith.sol\":{\"keccak256\":\"0x2c6cebe812e559c35ad27b93aad2d2939f793edb49e45f524fa2794bc16ccde1\",\"urls\":[\"bzz-raw://9cb4a45723469fd46a26c5848c55569d94d57c19d03d7e4bfebc7ec0f41825ba\",\"dweb:/ipfs/QmXdBd11zi8g1Vd5za5kzU2QQdu3XiXPqK4iqGPK1VAswJ\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Oracle.sol\":{\"keccak256\":\"0x17d7a71adb9afb3a407eb9b6c6a9ed35e7a91153d2774b8365092e7b6ee812fc\",\"urls\":[\"bzz-raw://a31b737168627036fbf3aef3c8cc78149426ba4c9d54fb852d4b099ee6f1f1cd\",\"dweb:/ipfs/QmQMtmKGkPFARaJxSUWNqt89d4bhL4qMbK2w4djKNHCdhE\"]},\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Trader.sol\":{\"keccak256\":\"0x3caf54bbd34fbf99272235a127d737ba30ec60f8f76d30ceaa86bccdb8f2fcbe\",\"urls\":[\"bzz-raw://1463c200a2a9872bf3f1dac9498a4c1c41ac53306cec22f2600061aa86e92148\",\"dweb:/ipfs/QmVsUgnGWDmguiY4EsztLshfPYUvH1r5oKWmo1YVMK1pyu\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff19166001908117825581905560025534801561002557600080fd5b50610778806100356000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806391b7f5ed1161008c5780639f5cf46a116100665780639f5cf46a1461018f578063e41a054f14610197578063e53adbb2146101aa578063ebed4bd4146101bd576100df565b806391b7f5ed14610154578063970c2ba11461016757806398d5fdca14610187576100df565b80636d2c6021116100bd5780636d2c60211461012f57806375092a3014610137578063910fb0731461013f576100df565b8063495f9bff146100e45780634993cc3b1461010557806363a3d85f1461011a575b600080fd5b6100ec6101de565b6040516100fc94939291906106a2565b60405180910390f35b61010d6101f3565b6040516100fc9190610686565b61012d61012836600461058d565b6101f9565b005b61010d61025a565b6100ec61027e565b610147610293565b6040516100fc9190610656565b61012d610162366004610567565b61029c565b61017a610175366004610488565b6102a1565b6040516100fc9190610694565b61010d610340565b61010d610346565b61012d6101a536600461052d565b61034c565b61012d6101b836600461058d565b610381565b6101d06101cb366004610567565b6103e2565b6040516100fc929190610664565b60035460045460055460065460ff9091169084565b60015481565b60408051608081018252858152602081018590529215159083018190526060909201819052600793909355600891909155600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600a55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600754600854600954600a5460ff9091169084565b60005460ff1681565b600255565b6102a96103f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103055750604080516080810182526007548152600854602082015260095460ff16151591810191909152600a546060820152610335565b50604080516080810182526003548152600454602082015260055460ff1615159181019190915260065460608201525b979650505050505050565b60025490565b60025481565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155600155565b60408051608081018252858152602081018590529215159083018190526060909201819052600393909355600491909155600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600655565b5060005460015460ff90911691565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356104238161070c565b92915050565b803561042381610723565b80356104238161072c565b60008083601f84011261045157600080fd5b50813567ffffffffffffffff81111561046957600080fd5b60208301915083600182028301111561048157600080fd5b9250929050565b600080600080600080600060c0888a0312156104a357600080fd5b60006104af8a8a610418565b97505060206104c08a828b01610418565b96505060406104d18a828b01610418565b95505060606104e28a828b01610434565b945050608088013567ffffffffffffffff8111156104ff57600080fd5b61050b8a828b0161043f565b935093505060a061051e8a828b01610434565b91505092959891949750929550565b6000806040838503121561054057600080fd5b600061054c8585610429565b925050602061055d85828601610434565b9150509250929050565b60006020828403121561057957600080fd5b60006105858484610434565b949350505050565b600080600080608085870312156105a357600080fd5b60006105af8787610434565b94505060206105c087828801610434565b93505060406105d187828801610429565b92505060606105e287828801610434565b91505092959194509250565b6105f7816106eb565b82525050565b6105f7816106f0565b8051608083019061061784826105fd565b50602082015161062a60208501826105fd565b50604082015161063d60408501826105ee565b50606082015161065060608501826105fd565b50505050565b6020810161042382846105ee565b6040810161067282856105ee565b61067f60208301846105fd565b9392505050565b6020810161042382846105fd565b608081016104238284610606565b608081016106b082876105fd565b6106bd60208301866105fd565b6106ca60408301856105ee565b6106d760608301846105fd565b95945050505050565b6000610423826106f3565b151590565b90565b73ffffffffffffffffffffffffffffffffffffffff1690565b610715816106e0565b811461072057600080fd5b50565b610715816106eb565b610715816106f056fea365627a7a72315820cc273644075a9ebc44bc10e68408f9612fa5af1fdc2de1de15d0047b223f17696c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806391b7f5ed1161008c5780639f5cf46a116100665780639f5cf46a1461018f578063e41a054f14610197578063e53adbb2146101aa578063ebed4bd4146101bd576100df565b806391b7f5ed14610154578063970c2ba11461016757806398d5fdca14610187576100df565b80636d2c6021116100bd5780636d2c60211461012f57806375092a3014610137578063910fb0731461013f576100df565b8063495f9bff146100e45780634993cc3b1461010557806363a3d85f1461011a575b600080fd5b6100ec6101de565b6040516100fc94939291906106a2565b60405180910390f35b61010d6101f3565b6040516100fc9190610686565b61012d61012836600461058d565b6101f9565b005b61010d61025a565b6100ec61027e565b610147610293565b6040516100fc9190610656565b61012d610162366004610567565b61029c565b61017a610175366004610488565b6102a1565b6040516100fc9190610694565b61010d610340565b61010d610346565b61012d6101a536600461052d565b61034c565b61012d6101b836600461058d565b610381565b6101d06101cb366004610567565b6103e2565b6040516100fc929190610664565b60035460045460055460065460ff9091169084565b60015481565b60408051608081018252858152602081018590529215159083018190526060909201819052600793909355600891909155600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600a55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600754600854600954600a5460ff9091169084565b60005460ff1681565b600255565b6102a96103f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103055750604080516080810182526007548152600854602082015260095460ff16151591810191909152600a546060820152610335565b50604080516080810182526003548152600454602082015260055460ff1615159181019190915260065460608201525b979650505050505050565b60025490565b60025481565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155600155565b60408051608081018252858152602081018590529215159083018190526060909201819052600393909355600491909155600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055600655565b5060005460015460ff90911691565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356104238161070c565b92915050565b803561042381610723565b80356104238161072c565b60008083601f84011261045157600080fd5b50813567ffffffffffffffff81111561046957600080fd5b60208301915083600182028301111561048157600080fd5b9250929050565b600080600080600080600060c0888a0312156104a357600080fd5b60006104af8a8a610418565b97505060206104c08a828b01610418565b96505060406104d18a828b01610418565b95505060606104e28a828b01610434565b945050608088013567ffffffffffffffff8111156104ff57600080fd5b61050b8a828b0161043f565b935093505060a061051e8a828b01610434565b91505092959891949750929550565b6000806040838503121561054057600080fd5b600061054c8585610429565b925050602061055d85828601610434565b9150509250929050565b60006020828403121561057957600080fd5b60006105858484610434565b949350505050565b600080600080608085870312156105a357600080fd5b60006105af8787610434565b94505060206105c087828801610434565b93505060406105d187828801610429565b92505060606105e287828801610434565b91505092959194509250565b6105f7816106eb565b82525050565b6105f7816106f0565b8051608083019061061784826105fd565b50602082015161062a60208501826105fd565b50604082015161063d60408501826105ee565b50606082015161065060608501826105fd565b50505050565b6020810161042382846105ee565b6040810161067282856105ee565b61067f60208301846105fd565b9392505050565b6020810161042382846105fd565b608081016104238284610606565b608081016106b082876105fd565b6106bd60208301866105fd565b6106ca60408301856105ee565b6106d760608301846105fd565b95945050505050565b6000610423826106f3565b151590565b90565b73ffffffffffffffffffffffffffffffffffffffff1690565b610715816106e0565b811461072057600080fd5b50565b610715816106eb565b610715816106f056fea365627a7a72315820cc273644075a9ebc44bc10e68408f9612fa5af1fdc2de1de15d0047b223f17696c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "1007:86:56:-;;;921:40:55;;;-1:-1:-1;;921:40:55;957:4;921:40;;;;;967:28;;;921:26:57;;1007:86:56;5:2:-1;;;;30:1;27;20:12;5:2;1007:86:56;;;;;;;",
  "deployedSourceMap": "1007:86:56:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1007:86:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:41:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;967:28:55;;;:::i;:::-;;;;;;;;2132:383:58;;;;;;;;;:::i;:::-;;1169:67;;;:::i;1029:43::-;;;:::i;921:40:55:-;;;:::i;:::-;;;;;;;;1071:106:57;;;;;;;;;:::i;1243:389:58:-;;;;;;;;;:::i;:::-;;;;;;;;954:111:57;;;:::i;921:26::-;;;:::i;1188:183:55:-;;;;;;;;;:::i;1638:375:58:-;;;;;;;;;:::i;1002:180:55:-;;;;;;;;;:::i;:::-;;;;;;;;;982:41:58;;;;;;;;;;;;;;;:::o;967:28:55:-;;;;:::o;2132:383:58:-;2329:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:16;:198;;;;;;;;;;;;;;;;;;;;;2132:383::o;1169:67::-;1224:11;1169:67;:::o;1029:43::-;;;;;;;;;;;;;;;:::o;921:40:55:-;;;;;;:::o;1071:106:57:-;1152:7;:18;1071:106::o;1243:389:58:-;1464:26;;:::i;:::-;1224:11;1510:35;;1506:89;;;-1:-1:-1;1561:23:58;;;;;;;;1568:16;1561:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:89;-1:-1:-1;1604:21:58;;;;;;;;1611:14;1604:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:389;;;;;;;;;;:::o;954:111:57:-;1051:7;;954:111;:::o;921:26::-;;;;:::o;1188:183:55:-;1298:21;:34;;;;;;;;;;;;;;-1:-1:-1;1342:22:55;1188:183::o;1638:375:58:-;1827:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1810:14;:196;;;;;;;;;;;;;;;;;;;;;1638:375::o;1002:180:55:-;-1:-1:-1;1105:4:55;1142:21;;1165:9;1142:21;;;;;1002:180::o;1007:86:56:-;;;;;;;;;-1:-1:-1;1007:86:56;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;142:124;206:20;;231:30;206:20;231:30;;273:130;340:20;;365:33;340:20;365:33;;424:336;;;538:3;531:4;523:6;519:17;515:27;505:2;;556:1;553;546:12;505:2;-1:-1;576:20;;616:18;605:30;;602:2;;;648:1;645;638:12;602:2;682:4;674:6;670:17;658:29;;733:3;725:4;717:6;713:17;703:8;699:32;696:41;693:2;;;750:1;747;740:12;693:2;498:262;;;;;;905:993;;;;;;;;1113:3;1101:9;1092:7;1088:23;1084:33;1081:2;;;1130:1;1127;1120:12;1081:2;1165:1;1182:53;1227:7;1207:9;1182:53;;;1172:63;;1144:97;1272:2;1290:53;1335:7;1326:6;1315:9;1311:22;1290:53;;;1280:63;;1251:98;1380:2;1398:53;1443:7;1434:6;1423:9;1419:22;1398:53;;;1388:63;;1359:98;1488:2;1506:53;1551:7;1542:6;1531:9;1527:22;1506:53;;;1496:63;;1467:98;1624:3;1613:9;1609:19;1596:33;1649:18;1641:6;1638:30;1635:2;;;1681:1;1678;1671:12;1635:2;1709:64;1765:7;1756:6;1745:9;1741:22;1709:64;;;1699:74;;;;1575:204;1810:3;1829:53;1874:7;1865:6;1854:9;1850:22;1829:53;;;1819:63;;1789:99;1075:823;;;;;;;;;;;1905:360;;;2023:2;2011:9;2002:7;1998:23;1994:32;1991:2;;;2039:1;2036;2029:12;1991:2;2074:1;2091:50;2133:7;2113:9;2091:50;;;2081:60;;2053:94;2178:2;2196:53;2241:7;2232:6;2221:9;2217:22;2196:53;;;2186:63;;2157:98;1985:280;;;;;;2272:241;;2376:2;2364:9;2355:7;2351:23;2347:32;2344:2;;;2392:1;2389;2382:12;2344:2;2427:1;2444:53;2489:7;2469:9;2444:53;;;2434:63;2338:175;-1:-1;;;;2338:175;2520:611;;;;;2672:3;2660:9;2651:7;2647:23;2643:33;2640:2;;;2689:1;2686;2679:12;2640:2;2724:1;2741:53;2786:7;2766:9;2741:53;;;2731:63;;2703:97;2831:2;2849:53;2894:7;2885:6;2874:9;2870:22;2849:53;;;2839:63;;2810:98;2939:2;2957:50;2999:7;2990:6;2979:9;2975:22;2957:50;;;2947:60;;2918:95;3044:2;3062:53;3107:7;3098:6;3087:9;3083:22;3062:53;;;3052:63;;3023:98;2634:497;;;;;;;;3138:94;3205:21;3220:5;3205:21;;;3200:3;3193:34;3187:45;;;3350:103;3423:24;3441:5;3423:24;;3643:812;3868:23;;3794:4;3785:14;;;3897:63;3789:3;3868:23;3897:63;;;3814:152;4049:4;4042:5;4038:16;4032:23;4061:63;4118:4;4113:3;4109:14;4095:12;4061:63;;;3976:154;4204:4;4197:5;4193:16;4187:23;4216:57;4267:4;4262:3;4258:14;4244:12;4216:57;;;4140:139;4359:4;4352:5;4348:16;4342:23;4371:63;4428:4;4423:3;4419:14;4405:12;4371:63;;;4289:151;3767:688;;;;4692:201;4804:2;4789:18;;4818:65;4793:9;4856:6;4818:65;;4900:312;5040:2;5025:18;;5054:65;5029:9;5092:6;5054:65;;;5130:72;5198:2;5187:9;5183:18;5174:6;5130:72;;;5011:201;;;;;;5219:213;5337:2;5322:18;;5351:71;5326:9;5395:6;5351:71;;5439:330;5615:3;5600:19;;5630:129;5604:9;5732:6;5630:129;;5996:535;6192:3;6177:19;;6207:71;6181:9;6251:6;6207:71;;;6289:72;6357:2;6346:9;6342:18;6333:6;6289:72;;;6372:66;6434:2;6423:9;6419:18;6410:6;6372:66;;;6449:72;6517:2;6506:9;6502:18;6493:6;6449:72;;;6163:368;;;;;;;;6538:91;;6600:24;6618:5;6600:24;;6636:85;6702:13;6695:21;;6678:43;6728:72;6790:5;6773:27;6807:121;6880:42;6869:54;;6852:76;7014:117;7083:24;7101:5;7083:24;;;7076:5;7073:35;7063:2;;7122:1;7119;7112:12;7063:2;7057:74;;7138:111;7204:21;7219:5;7204:21;;7256:117;7325:24;7343:5;7325:24;",
  "source": "/*\n\n    Copyright 2020 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { Test_P1Funder } from \"./Test_P1Funder.sol\";\nimport { Test_P1Oracle } from \"./Test_P1Oracle.sol\";\nimport { Test_P1Trader } from \"./Test_P1Trader.sol\";\n\n\n/**\n * @title Test_P1Monolith\n * @author dYdX\n *\n * @notice A second contract for testing the funder, oracle, and trader.\n */\n/* solium-disable-next-line camelcase, no-empty-blocks */\ncontract Test_P1Monolith is\n    Test_P1Funder,\n    Test_P1Oracle,\n    Test_P1Trader\n{}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Monolith.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Monolith.sol",
    "exportedSymbols": {
      "Test_P1Monolith": [
        11076
      ]
    },
    "id": 11077,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11062,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:56"
      },
      {
        "id": 11063,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:56"
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Funder.sol",
        "file": "./Test_P1Funder.sol",
        "id": 11065,
        "nodeType": "ImportDirective",
        "scope": 11077,
        "sourceUnit": 11061,
        "src": "662:52:56",
        "symbolAliases": [
          {
            "foreign": 11064,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Oracle.sol",
        "file": "./Test_P1Oracle.sol",
        "id": 11067,
        "nodeType": "ImportDirective",
        "scope": 11077,
        "sourceUnit": 11106,
        "src": "715:52:56",
        "symbolAliases": [
          {
            "foreign": 11066,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Trader.sol",
        "file": "./Test_P1Trader.sol",
        "id": 11069,
        "nodeType": "ImportDirective",
        "scope": 11077,
        "sourceUnit": 11199,
        "src": "768:52:56",
        "symbolAliases": [
          {
            "foreign": 11068,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11070,
              "name": "Test_P1Funder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11060,
              "src": "1039:13:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Test_P1Funder_$11060",
                "typeString": "contract Test_P1Funder"
              }
            },
            "id": 11071,
            "nodeType": "InheritanceSpecifier",
            "src": "1039:13:56"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11072,
              "name": "Test_P1Oracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11105,
              "src": "1058:13:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Test_P1Oracle_$11105",
                "typeString": "contract Test_P1Oracle"
              }
            },
            "id": 11073,
            "nodeType": "InheritanceSpecifier",
            "src": "1058:13:56"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11074,
              "name": "Test_P1Trader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11198,
              "src": "1077:13:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Test_P1Trader_$11198",
                "typeString": "contract Test_P1Trader"
              }
            },
            "id": 11075,
            "nodeType": "InheritanceSpecifier",
            "src": "1077:13:56"
          }
        ],
        "contractDependencies": [
          3067,
          3076,
          3099,
          11060,
          11105,
          11198
        ],
        "contractKind": "contract",
        "documentation": "@title Test_P1Monolith\n@author dYdX\n * @notice A second contract for testing the funder, oracle, and trader.",
        "fullyImplemented": true,
        "id": 11076,
        "linearizedBaseContracts": [
          11076,
          11198,
          3099,
          11105,
          3076,
          11060,
          3067
        ],
        "name": "Test_P1Monolith",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 11077,
        "src": "1007:86:56"
      }
    ],
    "src": "603:491:56"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Monolith.sol",
      "exportedSymbols": {
        "Test_P1Monolith": [
          11076
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 11062,
        "name": "PragmaDirective",
        "src": "603:23:56"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 11063,
        "name": "PragmaDirective",
        "src": "627:33:56"
      },
      {
        "attributes": {
          "SourceUnit": 11061,
          "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Funder.sol",
          "file": "./Test_P1Funder.sol",
          "scope": 11077,
          "symbolAliases": [
            {
              "foreign": 11064,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 11065,
        "name": "ImportDirective",
        "src": "662:52:56"
      },
      {
        "attributes": {
          "SourceUnit": 11106,
          "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Oracle.sol",
          "file": "./Test_P1Oracle.sol",
          "scope": 11077,
          "symbolAliases": [
            {
              "foreign": 11066,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 11067,
        "name": "ImportDirective",
        "src": "715:52:56"
      },
      {
        "attributes": {
          "SourceUnit": 11199,
          "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/v1/Test_P1Trader.sol",
          "file": "./Test_P1Trader.sol",
          "scope": 11077,
          "symbolAliases": [
            {
              "foreign": 11068,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 11069,
        "name": "ImportDirective",
        "src": "768:52:56"
      },
      {
        "attributes": {
          "contractDependencies": [
            3067,
            3076,
            3099,
            11060,
            11105,
            11198
          ],
          "contractKind": "contract",
          "documentation": "@title Test_P1Monolith\n@author dYdX\n * @notice A second contract for testing the funder, oracle, and trader.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            11076,
            11198,
            3099,
            11105,
            3076,
            11060,
            3067
          ],
          "name": "Test_P1Monolith",
          "nodes": [
            null
          ],
          "scope": 11077
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Test_P1Funder",
                  "referencedDeclaration": 11060,
                  "type": "contract Test_P1Funder"
                },
                "id": 11070,
                "name": "UserDefinedTypeName",
                "src": "1039:13:56"
              }
            ],
            "id": 11071,
            "name": "InheritanceSpecifier",
            "src": "1039:13:56"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Test_P1Oracle",
                  "referencedDeclaration": 11105,
                  "type": "contract Test_P1Oracle"
                },
                "id": 11072,
                "name": "UserDefinedTypeName",
                "src": "1058:13:56"
              }
            ],
            "id": 11073,
            "name": "InheritanceSpecifier",
            "src": "1058:13:56"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Test_P1Trader",
                  "referencedDeclaration": 11198,
                  "type": "contract Test_P1Trader"
                },
                "id": 11074,
                "name": "UserDefinedTypeName",
                "src": "1077:13:56"
              }
            ],
            "id": 11075,
            "name": "InheritanceSpecifier",
            "src": "1077:13:56"
          }
        ],
        "id": 11076,
        "name": "ContractDefinition",
        "src": "1007:86:56"
      }
    ],
    "id": 11077,
    "name": "SourceUnit",
    "src": "603:491:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T16:42:57.492Z",
  "devdoc": {
    "author": "dYdX",
    "methods": {},
    "title": "Test_P1Monolith"
  },
  "userdoc": {
    "methods": {
      "setSecondTradeResult(uint256,uint256,bool,bytes32)": {
        "notice": "Sets a second trade result which can be triggered by the trader flags of the first trade."
      }
    },
    "notice": "A second contract for testing the funder, oracle, and trader."
  }
}