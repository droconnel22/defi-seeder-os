{
  "contractName": "I_Solo",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsLocalOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsGlobalOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "internalType": "struct I_Solo.AccountInfo[]",
          "name": "accounts",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum I_Solo.ActionType",
              "name": "actionType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "accountId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "sign",
                  "type": "bool"
                },
                {
                  "internalType": "enum I_Solo.AssetDenomination",
                  "name": "denomination",
                  "type": "uint8"
                },
                {
                  "internalType": "enum I_Solo.AssetReference",
                  "name": "ref",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct I_Solo.AssetAmount",
              "name": "amount",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "primaryMarketId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "secondaryMarketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "otherAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "otherAccountId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct I_Solo.ActionArgs[]",
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "operate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsGlobalOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsLocalOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"internalType\":\"struct I_Solo.AccountInfo[]\",\"name\":\"accounts\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum I_Solo.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"accountId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sign\",\"type\":\"bool\"},{\"internalType\":\"enum I_Solo.AssetDenomination\",\"name\":\"denomination\",\"type\":\"uint8\"},{\"internalType\":\"enum I_Solo.AssetReference\",\"name\":\"ref\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct I_Solo.AssetAmount\",\"name\":\"amount\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"primaryMarketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondaryMarketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"otherAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"otherAccountId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct I_Solo.ActionArgs[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"operate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX * Interface for calling the Solo margin smart contract.\",\"methods\":{\"getIsGlobalOperator(address)\":{\"params\":{\"operator\":\"The address to query\"},\"return\":\"True if operator is a global operator\"},\"getIsLocalOperator(address,address)\":{\"params\":{\"operator\":\"The possible operator\",\"owner\":\"The owner of the accounts\"},\"return\":\"True if operator is approved for owner's accounts\"},\"getMarketTokenAddress(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The token address\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"params\":{\"accounts\":\"A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred to by its                  index in the list.\",\"actions\":\"An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order.\"}}},\"title\":\"I_Solo\"},\"userdoc\":{\"methods\":{\"getIsGlobalOperator(address)\":{\"notice\":\"Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own.\"},\"getIsLocalOperator(address,address)\":{\"notice\":\"Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own.\"},\"getMarketTokenAddress(uint256)\":{\"notice\":\"Get the ERC20 token address for a market.\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"notice\":\"The main entry-point to Solo that allows users and contracts to manage accounts. Takes one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \\\"operation\\\". Account collateralization is ensured only after the completion of the entire operation.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/dydx/I_Solo.sol\":\"I_Solo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/dydx/I_Solo.sol\":{\"keccak256\":\"0xe4be5ffe216b0e5d4fc44a4dd1cd3bd2732f50463d157c29675d0789574b2416\",\"urls\":[\"bzz-raw://684692102366dc2ee17f09f89928624f84108b619e897a18e2e3785134e2e140\",\"dweb:/ipfs/QmXzFUW8eYcjqpiZ6QNh8XHYsvCE1h8kBd36qbrHbA9acM\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n    Copyright 2020 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\n\n/**\n * @title I_Solo\n * @author dYdX\n *\n * Interface for calling the Solo margin smart contract.\n */\ninterface I_Solo {\n\n    // ============ Enums ============\n\n    enum ActionType {\n        Deposit,   // supply tokens\n        Withdraw,  // borrow tokens\n        Transfer,  // transfer balance between accounts\n        Buy,       // buy an amount of some token (externally)\n        Sell,      // sell an amount of some token (externally)\n        Trade,     // trade tokens against another account\n        Liquidate, // liquidate an undercollateralized or expiring account\n        Vaporize,  // use excess tokens to zero-out a completely negative account\n        Call       // send arbitrary data to an address\n    }\n\n    enum AssetDenomination {\n        Wei, // the amount is denominated in wei\n        Par  // the amount is denominated in par\n    }\n\n    enum AssetReference {\n        Delta, // the amount is given as a delta from the current value\n        Target // the amount is given as an exact number to end up at\n    }\n\n    // ============ Structs ============\n\n    /**\n     * Represents the unique key that specifies an account\n     */\n    struct AccountInfo {\n        address owner;  // The address that owns the account\n        uint256 number; // A nonce that allows a single address to control many accounts\n    }\n\n    struct AssetAmount {\n        bool sign; // true if positive\n        AssetDenomination denomination;\n        AssetReference ref;\n        uint256 value;\n    }\n\n    /**\n     * Arguments that are passed to Solo in an ordered list as part of a single operation.\n     *\n     * Each ActionArgs has an actionType which specifies which action struct that the data will be\n     * parsed into before being processed.\n     */\n    struct ActionArgs {\n        ActionType actionType;\n        uint256 accountId;\n        AssetAmount amount;\n        uint256 primaryMarketId;\n        uint256 secondaryMarketId;\n        address otherAddress;\n        uint256 otherAccountId;\n        bytes data;\n    }\n\n    // ============ Getter Functions ============\n\n    /**\n     * Return true if a particular address is approved as an operator for an owner's accounts.\n     * Approved operators can act on the accounts of the owner as if it were the operator's own.\n     *\n     * @param  owner     The owner of the accounts\n     * @param  operator  The possible operator\n     * @return           True if operator is approved for owner's accounts\n     */\n    function getIsLocalOperator(\n        address owner,\n        address operator\n    )\n        external\n        view\n        returns (bool);\n\n    /**\n     * Return true if a particular address is approved as a global operator. Such an address can\n     * act on any account as if it were the operator's own.\n     *\n     * @param  operator  The address to query\n     * @return           True if operator is a global operator\n     */\n    function getIsGlobalOperator(\n        address operator\n    )\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Get the ERC20 token address for a market.\n     *\n     * @param  marketId  The market to query\n     * @return           The token address\n     */\n    function getMarketTokenAddress(\n        uint256 marketId\n    )\n        external\n        view\n        returns (address);\n\n    // ============ State-Changing Functions ============\n\n    /**\n     * @notice The main entry-point to Solo that allows users and contracts to manage accounts.\n     *  Takes one or more actions on one or more accounts. The msg.sender must be the owner or\n     *  operator of all accounts except for those being liquidated, vaporized, or traded with.\n     *  One call to operate() is considered a singular \"operation\". Account collateralization is\n     *  ensured only after the completion of the entire operation.\n     *\n     * @param  accounts  A list of all accounts that will be used in this operation. Cannot contain\n     *                   duplicates. In each action, the relevant account will be referred to by its\n     *                   index in the list.\n     * @param  actions   An ordered list of all actions that will be taken in this operation. The\n     *                   actions will be processed in order.\n     */\n    function operate(\n        AccountInfo[] calldata accounts,\n        ActionArgs[] calldata actions\n    )\n        external;\n}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/dydx/I_Solo.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/dydx/I_Solo.sol",
    "exportedSymbols": {
      "I_Solo": [
        184
      ]
    },
    "id": 185,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:3"
      },
      {
        "id": 104,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title I_Solo\n@author dYdX\n * Interface for calling the Solo margin smart contract.",
        "fullyImplemented": false,
        "id": 184,
        "linearizedBaseContracts": [
          184
        ],
        "name": "I_Solo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "I_Solo.ActionType",
            "id": 114,
            "members": [
              {
                "id": 105,
                "name": "Deposit",
                "nodeType": "EnumValue",
                "src": "854:7:3"
              },
              {
                "id": 106,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "890:8:3"
              },
              {
                "id": 107,
                "name": "Transfer",
                "nodeType": "EnumValue",
                "src": "926:8:3"
              },
              {
                "id": 108,
                "name": "Buy",
                "nodeType": "EnumValue",
                "src": "982:3:3"
              },
              {
                "id": 109,
                "name": "Sell",
                "nodeType": "EnumValue",
                "src": "1045:4:3"
              },
              {
                "id": 110,
                "name": "Trade",
                "nodeType": "EnumValue",
                "src": "1109:5:3"
              },
              {
                "id": 111,
                "name": "Liquidate",
                "nodeType": "EnumValue",
                "src": "1168:9:3"
              },
              {
                "id": 112,
                "name": "Vaporize",
                "nodeType": "EnumValue",
                "src": "1243:8:3"
              },
              {
                "id": 113,
                "name": "Call",
                "nodeType": "EnumValue",
                "src": "1325:4:3"
              }
            ],
            "name": "ActionType",
            "nodeType": "EnumDefinition",
            "src": "828:550:3"
          },
          {
            "canonicalName": "I_Solo.AssetDenomination",
            "id": 117,
            "members": [
              {
                "id": 115,
                "name": "Wei",
                "nodeType": "EnumValue",
                "src": "1417:3:3"
              },
              {
                "id": 116,
                "name": "Par",
                "nodeType": "EnumValue",
                "src": "1466:3:3"
              }
            ],
            "name": "AssetDenomination",
            "nodeType": "EnumDefinition",
            "src": "1384:128:3"
          },
          {
            "canonicalName": "I_Solo.AssetReference",
            "id": 120,
            "members": [
              {
                "id": 118,
                "name": "Delta",
                "nodeType": "EnumValue",
                "src": "1548:5:3"
              },
              {
                "id": 119,
                "name": "Target",
                "nodeType": "EnumValue",
                "src": "1620:6:3"
              }
            ],
            "name": "AssetReference",
            "nodeType": "EnumDefinition",
            "src": "1518:169:3"
          },
          {
            "canonicalName": "I_Solo.AccountInfo",
            "id": 125,
            "members": [
              {
                "constant": false,
                "id": 122,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "1839:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 121,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 124,
                "name": "number",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "1900:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 123,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1900:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "AccountInfo",
            "nodeType": "StructDefinition",
            "scope": 184,
            "src": "1810:176:3",
            "visibility": "public"
          },
          {
            "canonicalName": "I_Solo.AssetAmount",
            "id": 134,
            "members": [
              {
                "constant": false,
                "id": 127,
                "name": "sign",
                "nodeType": "VariableDeclaration",
                "scope": 134,
                "src": "2021:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 126,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2021:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "name": "denomination",
                "nodeType": "VariableDeclaration",
                "scope": 134,
                "src": "2060:30:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AssetDenomination_$117",
                  "typeString": "enum I_Solo.AssetDenomination"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 128,
                  "name": "AssetDenomination",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 117,
                  "src": "2060:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetDenomination_$117",
                    "typeString": "enum I_Solo.AssetDenomination"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "name": "ref",
                "nodeType": "VariableDeclaration",
                "scope": 134,
                "src": "2100:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AssetReference_$120",
                  "typeString": "enum I_Solo.AssetReference"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 130,
                  "name": "AssetReference",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 120,
                  "src": "2100:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetReference_$120",
                    "typeString": "enum I_Solo.AssetReference"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 133,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 134,
                "src": "2128:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 132,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2128:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "AssetAmount",
            "nodeType": "StructDefinition",
            "scope": 184,
            "src": "1992:156:3",
            "visibility": "public"
          },
          {
            "canonicalName": "I_Solo.ActionArgs",
            "id": 151,
            "members": [
              {
                "constant": false,
                "id": 136,
                "name": "actionType",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2438:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ActionType_$114",
                  "typeString": "enum I_Solo.ActionType"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 135,
                  "name": "ActionType",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 114,
                  "src": "2438:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ActionType_$114",
                    "typeString": "enum I_Solo.ActionType"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 138,
                "name": "accountId",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2469:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 137,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2469:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 140,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2496:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AssetAmount_$134_storage_ptr",
                  "typeString": "struct I_Solo.AssetAmount"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 139,
                  "name": "AssetAmount",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 134,
                  "src": "2496:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetAmount_$134_storage_ptr",
                    "typeString": "struct I_Solo.AssetAmount"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 142,
                "name": "primaryMarketId",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2524:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2524:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 144,
                "name": "secondaryMarketId",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2557:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 143,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2557:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 146,
                "name": "otherAddress",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2592:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 145,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2592:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 148,
                "name": "otherAccountId",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2622:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 147,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2622:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 150,
                "name": "data",
                "nodeType": "VariableDeclaration",
                "scope": 151,
                "src": "2654:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 149,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2654:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ActionArgs",
            "nodeType": "StructDefinition",
            "scope": 184,
            "src": "2410:261:3",
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Return true if a particular address is approved as an operator for an owner's accounts.\nApproved operators can act on the accounts of the owner as if it were the operator's own.\n     * @param  owner     The owner of the accounts\n@param  operator  The possible operator\n@return           True if operator is approved for owner's accounts",
            "id": 160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getIsLocalOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "3153:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3153:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "3176:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3143:55:3"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "3246:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3245:6:3"
            },
            "scope": 184,
            "src": "3116:136:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "Return true if a particular address is approved as a global operator. Such an address can\nact on any account as if it were the operator's own.\n     * @param  operator  The address to query\n@return           True if operator is a global operator",
            "id": 167,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getIsGlobalOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "3585:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3575:32:3"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "3655:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3654:6:3"
            },
            "scope": 184,
            "src": "3547:114:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Get the ERC20 token address for a market.\n     * @param  marketId  The market to query\n@return           The token address",
            "id": 174,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketTokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3875:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3875:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3865:32:3"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3945:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3944:9:3"
            },
            "scope": 184,
            "src": "3835:119:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice The main entry-point to Solo that allows users and contracts to manage accounts.\n Takes one or more actions on one or more accounts. The msg.sender must be the owner or\n operator of all accounts except for those being liquidated, vaporized, or traded with.\n One call to operate() is considered a singular \"operation\". Account collateralization is\n ensured only after the completion of the entire operation.\n     * @param  accounts  A list of all accounts that will be used in this operation. Cannot contain\n                  duplicates. In each action, the relevant account will be referred to by its\n                  index in the list.\n@param  actions   An ordered list of all actions that will be taken in this operation. The\n                  actions will be processed in order.",
            "id": 183,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "4922:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AccountInfo_$125_calldata_$dyn_calldata_ptr",
                    "typeString": "struct I_Solo.AccountInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 175,
                      "name": "AccountInfo",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 125,
                      "src": "4922:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccountInfo_$125_storage_ptr",
                        "typeString": "struct I_Solo.AccountInfo"
                      }
                    },
                    "id": 176,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4922:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AccountInfo_$125_storage_$dyn_storage_ptr",
                      "typeString": "struct I_Solo.AccountInfo[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "actions",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "4963:29:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ActionArgs_$151_calldata_$dyn_calldata_ptr",
                    "typeString": "struct I_Solo.ActionArgs[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 178,
                      "name": "ActionArgs",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 151,
                      "src": "4963:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$151_storage_ptr",
                        "typeString": "struct I_Solo.ActionArgs"
                      }
                    },
                    "id": 179,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4963:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ActionArgs_$151_storage_$dyn_storage_ptr",
                      "typeString": "struct I_Solo.ActionArgs[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4912:86:3"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5015:0:3"
            },
            "scope": 184,
            "src": "4896:120:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 185,
        "src": "764:4254:3"
      }
    ],
    "src": "603:4416:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/dydx/I_Solo.sol",
      "exportedSymbols": {
        "I_Solo": [
          184
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 103,
        "name": "PragmaDirective",
        "src": "603:23:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 104,
        "name": "PragmaDirective",
        "src": "627:33:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@title I_Solo\n@author dYdX\n * Interface for calling the Solo margin smart contract.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            184
          ],
          "name": "I_Solo",
          "scope": 185
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "I_Solo.ActionType",
              "name": "ActionType"
            },
            "children": [
              {
                "attributes": {
                  "name": "Deposit"
                },
                "id": 105,
                "name": "EnumValue",
                "src": "854:7:3"
              },
              {
                "attributes": {
                  "name": "Withdraw"
                },
                "id": 106,
                "name": "EnumValue",
                "src": "890:8:3"
              },
              {
                "attributes": {
                  "name": "Transfer"
                },
                "id": 107,
                "name": "EnumValue",
                "src": "926:8:3"
              },
              {
                "attributes": {
                  "name": "Buy"
                },
                "id": 108,
                "name": "EnumValue",
                "src": "982:3:3"
              },
              {
                "attributes": {
                  "name": "Sell"
                },
                "id": 109,
                "name": "EnumValue",
                "src": "1045:4:3"
              },
              {
                "attributes": {
                  "name": "Trade"
                },
                "id": 110,
                "name": "EnumValue",
                "src": "1109:5:3"
              },
              {
                "attributes": {
                  "name": "Liquidate"
                },
                "id": 111,
                "name": "EnumValue",
                "src": "1168:9:3"
              },
              {
                "attributes": {
                  "name": "Vaporize"
                },
                "id": 112,
                "name": "EnumValue",
                "src": "1243:8:3"
              },
              {
                "attributes": {
                  "name": "Call"
                },
                "id": 113,
                "name": "EnumValue",
                "src": "1325:4:3"
              }
            ],
            "id": 114,
            "name": "EnumDefinition",
            "src": "828:550:3"
          },
          {
            "attributes": {
              "canonicalName": "I_Solo.AssetDenomination",
              "name": "AssetDenomination"
            },
            "children": [
              {
                "attributes": {
                  "name": "Wei"
                },
                "id": 115,
                "name": "EnumValue",
                "src": "1417:3:3"
              },
              {
                "attributes": {
                  "name": "Par"
                },
                "id": 116,
                "name": "EnumValue",
                "src": "1466:3:3"
              }
            ],
            "id": 117,
            "name": "EnumDefinition",
            "src": "1384:128:3"
          },
          {
            "attributes": {
              "canonicalName": "I_Solo.AssetReference",
              "name": "AssetReference"
            },
            "children": [
              {
                "attributes": {
                  "name": "Delta"
                },
                "id": 118,
                "name": "EnumValue",
                "src": "1548:5:3"
              },
              {
                "attributes": {
                  "name": "Target"
                },
                "id": 119,
                "name": "EnumValue",
                "src": "1620:6:3"
              }
            ],
            "id": 120,
            "name": "EnumDefinition",
            "src": "1518:169:3"
          },
          {
            "attributes": {
              "canonicalName": "I_Solo.AccountInfo",
              "name": "AccountInfo",
              "scope": 184,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 125,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 121,
                    "name": "ElementaryTypeName",
                    "src": "1839:7:3"
                  }
                ],
                "id": 122,
                "name": "VariableDeclaration",
                "src": "1839:13:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "number",
                  "scope": 125,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 123,
                    "name": "ElementaryTypeName",
                    "src": "1900:7:3"
                  }
                ],
                "id": 124,
                "name": "VariableDeclaration",
                "src": "1900:14:3"
              }
            ],
            "id": 125,
            "name": "StructDefinition",
            "src": "1810:176:3"
          },
          {
            "attributes": {
              "canonicalName": "I_Solo.AssetAmount",
              "name": "AssetAmount",
              "scope": 184,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "sign",
                  "scope": 134,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 126,
                    "name": "ElementaryTypeName",
                    "src": "2021:4:3"
                  }
                ],
                "id": 127,
                "name": "VariableDeclaration",
                "src": "2021:9:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "denomination",
                  "scope": 134,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum I_Solo.AssetDenomination",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "AssetDenomination",
                      "referencedDeclaration": 117,
                      "type": "enum I_Solo.AssetDenomination"
                    },
                    "id": 128,
                    "name": "UserDefinedTypeName",
                    "src": "2060:17:3"
                  }
                ],
                "id": 129,
                "name": "VariableDeclaration",
                "src": "2060:30:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ref",
                  "scope": 134,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum I_Solo.AssetReference",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "AssetReference",
                      "referencedDeclaration": 120,
                      "type": "enum I_Solo.AssetReference"
                    },
                    "id": 130,
                    "name": "UserDefinedTypeName",
                    "src": "2100:14:3"
                  }
                ],
                "id": 131,
                "name": "VariableDeclaration",
                "src": "2100:18:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "value",
                  "scope": 134,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 132,
                    "name": "ElementaryTypeName",
                    "src": "2128:7:3"
                  }
                ],
                "id": 133,
                "name": "VariableDeclaration",
                "src": "2128:13:3"
              }
            ],
            "id": 134,
            "name": "StructDefinition",
            "src": "1992:156:3"
          },
          {
            "attributes": {
              "canonicalName": "I_Solo.ActionArgs",
              "name": "ActionArgs",
              "scope": 184,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "actionType",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum I_Solo.ActionType",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ActionType",
                      "referencedDeclaration": 114,
                      "type": "enum I_Solo.ActionType"
                    },
                    "id": 135,
                    "name": "UserDefinedTypeName",
                    "src": "2438:10:3"
                  }
                ],
                "id": 136,
                "name": "VariableDeclaration",
                "src": "2438:21:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "accountId",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 137,
                    "name": "ElementaryTypeName",
                    "src": "2469:7:3"
                  }
                ],
                "id": 138,
                "name": "VariableDeclaration",
                "src": "2469:17:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "amount",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct I_Solo.AssetAmount",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "AssetAmount",
                      "referencedDeclaration": 134,
                      "type": "struct I_Solo.AssetAmount"
                    },
                    "id": 139,
                    "name": "UserDefinedTypeName",
                    "src": "2496:11:3"
                  }
                ],
                "id": 140,
                "name": "VariableDeclaration",
                "src": "2496:18:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "primaryMarketId",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 141,
                    "name": "ElementaryTypeName",
                    "src": "2524:7:3"
                  }
                ],
                "id": 142,
                "name": "VariableDeclaration",
                "src": "2524:23:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "secondaryMarketId",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 143,
                    "name": "ElementaryTypeName",
                    "src": "2557:7:3"
                  }
                ],
                "id": 144,
                "name": "VariableDeclaration",
                "src": "2557:25:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "otherAddress",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 145,
                    "name": "ElementaryTypeName",
                    "src": "2592:7:3"
                  }
                ],
                "id": 146,
                "name": "VariableDeclaration",
                "src": "2592:20:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "otherAccountId",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 147,
                    "name": "ElementaryTypeName",
                    "src": "2622:7:3"
                  }
                ],
                "id": 148,
                "name": "VariableDeclaration",
                "src": "2622:22:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "data",
                  "scope": 151,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes",
                      "type": "bytes"
                    },
                    "id": 149,
                    "name": "ElementaryTypeName",
                    "src": "2654:5:3"
                  }
                ],
                "id": 150,
                "name": "VariableDeclaration",
                "src": "2654:10:3"
              }
            ],
            "id": 151,
            "name": "StructDefinition",
            "src": "2410:261:3"
          },
          {
            "attributes": {
              "body": null,
              "documentation": "Return true if a particular address is approved as an operator for an owner's accounts.\nApproved operators can act on the accounts of the owner as if it were the operator's own.\n     * @param  owner     The owner of the accounts\n@param  operator  The possible operator\n@return           True if operator is approved for owner's accounts",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getIsLocalOperator",
              "scope": 184,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 160,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 152,
                        "name": "ElementaryTypeName",
                        "src": "3153:7:3"
                      }
                    ],
                    "id": 153,
                    "name": "VariableDeclaration",
                    "src": "3153:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "operator",
                      "scope": 160,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 154,
                        "name": "ElementaryTypeName",
                        "src": "3176:7:3"
                      }
                    ],
                    "id": 155,
                    "name": "VariableDeclaration",
                    "src": "3176:16:3"
                  }
                ],
                "id": 156,
                "name": "ParameterList",
                "src": "3143:55:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 160,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 157,
                        "name": "ElementaryTypeName",
                        "src": "3246:4:3"
                      }
                    ],
                    "id": 158,
                    "name": "VariableDeclaration",
                    "src": "3246:4:3"
                  }
                ],
                "id": 159,
                "name": "ParameterList",
                "src": "3245:6:3"
              }
            ],
            "id": 160,
            "name": "FunctionDefinition",
            "src": "3116:136:3"
          },
          {
            "attributes": {
              "body": null,
              "documentation": "Return true if a particular address is approved as a global operator. Such an address can\nact on any account as if it were the operator's own.\n     * @param  operator  The address to query\n@return           True if operator is a global operator",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getIsGlobalOperator",
              "scope": 184,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "operator",
                      "scope": 167,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 161,
                        "name": "ElementaryTypeName",
                        "src": "3585:7:3"
                      }
                    ],
                    "id": 162,
                    "name": "VariableDeclaration",
                    "src": "3585:16:3"
                  }
                ],
                "id": 163,
                "name": "ParameterList",
                "src": "3575:32:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 167,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 164,
                        "name": "ElementaryTypeName",
                        "src": "3655:4:3"
                      }
                    ],
                    "id": 165,
                    "name": "VariableDeclaration",
                    "src": "3655:4:3"
                  }
                ],
                "id": 166,
                "name": "ParameterList",
                "src": "3654:6:3"
              }
            ],
            "id": 167,
            "name": "FunctionDefinition",
            "src": "3547:114:3"
          },
          {
            "attributes": {
              "body": null,
              "documentation": "@notice Get the ERC20 token address for a market.\n     * @param  marketId  The market to query\n@return           The token address",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getMarketTokenAddress",
              "scope": 184,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "marketId",
                      "scope": 174,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 168,
                        "name": "ElementaryTypeName",
                        "src": "3875:7:3"
                      }
                    ],
                    "id": 169,
                    "name": "VariableDeclaration",
                    "src": "3875:16:3"
                  }
                ],
                "id": 170,
                "name": "ParameterList",
                "src": "3865:32:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 174,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 171,
                        "name": "ElementaryTypeName",
                        "src": "3945:7:3"
                      }
                    ],
                    "id": 172,
                    "name": "VariableDeclaration",
                    "src": "3945:7:3"
                  }
                ],
                "id": 173,
                "name": "ParameterList",
                "src": "3944:9:3"
              }
            ],
            "id": 174,
            "name": "FunctionDefinition",
            "src": "3835:119:3"
          },
          {
            "attributes": {
              "body": null,
              "documentation": "@notice The main entry-point to Solo that allows users and contracts to manage accounts.\n Takes one or more actions on one or more accounts. The msg.sender must be the owner or\n operator of all accounts except for those being liquidated, vaporized, or traded with.\n One call to operate() is considered a singular \"operation\". Account collateralization is\n ensured only after the completion of the entire operation.\n     * @param  accounts  A list of all accounts that will be used in this operation. Cannot contain\n                  duplicates. In each action, the relevant account will be referred to by its\n                  index in the list.\n@param  actions   An ordered list of all actions that will be taken in this operation. The\n                  actions will be processed in order.",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "operate",
              "scope": 184,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "accounts",
                      "scope": 183,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct I_Solo.AccountInfo[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct I_Solo.AccountInfo[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "AccountInfo",
                              "referencedDeclaration": 125,
                              "type": "struct I_Solo.AccountInfo"
                            },
                            "id": 175,
                            "name": "UserDefinedTypeName",
                            "src": "4922:11:3"
                          }
                        ],
                        "id": 176,
                        "name": "ArrayTypeName",
                        "src": "4922:13:3"
                      }
                    ],
                    "id": 177,
                    "name": "VariableDeclaration",
                    "src": "4922:31:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "actions",
                      "scope": 183,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct I_Solo.ActionArgs[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct I_Solo.ActionArgs[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ActionArgs",
                              "referencedDeclaration": 151,
                              "type": "struct I_Solo.ActionArgs"
                            },
                            "id": 178,
                            "name": "UserDefinedTypeName",
                            "src": "4963:10:3"
                          }
                        ],
                        "id": 179,
                        "name": "ArrayTypeName",
                        "src": "4963:12:3"
                      }
                    ],
                    "id": 180,
                    "name": "VariableDeclaration",
                    "src": "4963:29:3"
                  }
                ],
                "id": 181,
                "name": "ParameterList",
                "src": "4912:86:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 182,
                "name": "ParameterList",
                "src": "5015:0:3"
              }
            ],
            "id": 183,
            "name": "FunctionDefinition",
            "src": "4896:120:3"
          }
        ],
        "id": 184,
        "name": "ContractDefinition",
        "src": "764:4254:3"
      }
    ],
    "id": 185,
    "name": "SourceUnit",
    "src": "603:4416:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T16:42:57.355Z",
  "devdoc": {
    "author": "dYdX * Interface for calling the Solo margin smart contract.",
    "methods": {
      "getIsGlobalOperator(address)": {
        "params": {
          "operator": "The address to query"
        },
        "return": "True if operator is a global operator"
      },
      "getIsLocalOperator(address,address)": {
        "params": {
          "operator": "The possible operator",
          "owner": "The owner of the accounts"
        },
        "return": "True if operator is approved for owner's accounts"
      },
      "getMarketTokenAddress(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The token address"
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "params": {
          "accounts": "A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred to by its                  index in the list.",
          "actions": "An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order."
        }
      }
    },
    "title": "I_Solo"
  },
  "userdoc": {
    "methods": {
      "getIsGlobalOperator(address)": {
        "notice": "Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own."
      },
      "getIsLocalOperator(address,address)": {
        "notice": "Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own."
      },
      "getMarketTokenAddress(uint256)": {
        "notice": "Get the ERC20 token address for a market."
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "notice": "The main entry-point to Solo that allows users and contracts to manage accounts. Takes one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \"operation\". Account collateralization is ensured only after the completion of the entire operation."
      }
    }
  }
}