{
  "contractName": "I_Aggregator",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX * Partial interface for a Chainlink Aggregator.\",\"methods\":{\"latestAnswer()\":{\"details\":\"Warning: Will return 0 if no answer has been reached.\"}},\"title\":\"I_Aggregator\"},\"userdoc\":{\"methods\":{\"latestAnswer()\":{\"notice\":\"Get the most recent answer from the aggregator.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/chainlink/I_Aggregator.sol\":\"I_Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/chainlink/I_Aggregator.sol\":{\"keccak256\":\"0x5fa6efb3e45094690188e819494e8543f8c1d1280e3be643e51ca3d4d1d25b2f\",\"urls\":[\"bzz-raw://c0b643b602071d16ce601ed337b8ae276bfcfffe52ffadc7862dab040f78d6be\",\"dweb:/ipfs/QmR8UM7XYSQVrc7CvLFh4LKBPtwjtvPNCwPTuHxF4fSGBD\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n    Copyright 2020 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\n\n/**\n * @title I_Aggregator\n * @author dYdX\n *\n * Partial interface for a Chainlink Aggregator.\n */\ninterface I_Aggregator {\n\n    // ============ Getter Functions ============\n\n    /**\n     * @notice Get the most recent answer from the aggregator.\n     * @dev Warning: Will return 0 if no answer has been reached.\n     */\n    function latestAnswer()\n        external\n        view\n        returns (int256);\n}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/chainlink/I_Aggregator.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/chainlink/I_Aggregator.sol",
    "exportedSymbols": {
      "I_Aggregator": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 94,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:2"
      },
      {
        "id": 95,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title I_Aggregator\n@author dYdX\n * Partial interface for a Chainlink Aggregator.",
        "fullyImplemented": false,
        "id": 101,
        "linearizedBaseContracts": [
          101
        ],
        "name": "I_Aggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Get the most recent answer from the aggregator.\n@dev Warning: Will return 0 if no answer has been reached.",
            "id": 100,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:2"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1059:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1058:8:2"
            },
            "scope": 101,
            "src": "988:79:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 102,
        "src": "762:307:2"
      }
    ],
    "src": "603:467:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/external/chainlink/I_Aggregator.sol",
      "exportedSymbols": {
        "I_Aggregator": [
          101
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 94,
        "name": "PragmaDirective",
        "src": "603:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 95,
        "name": "PragmaDirective",
        "src": "627:33:2"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@title I_Aggregator\n@author dYdX\n * Partial interface for a Chainlink Aggregator.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            101
          ],
          "name": "I_Aggregator",
          "scope": 102
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@notice Get the most recent answer from the aggregator.\n@dev Warning: Will return 0 if no answer has been reached.",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "latestAnswer",
              "scope": 101,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 96,
                "name": "ParameterList",
                "src": "1009:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 100,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "int256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "int256",
                          "type": "int256"
                        },
                        "id": 97,
                        "name": "ElementaryTypeName",
                        "src": "1059:6:2"
                      }
                    ],
                    "id": 98,
                    "name": "VariableDeclaration",
                    "src": "1059:6:2"
                  }
                ],
                "id": 99,
                "name": "ParameterList",
                "src": "1058:8:2"
              }
            ],
            "id": 100,
            "name": "FunctionDefinition",
            "src": "988:79:2"
          }
        ],
        "id": 101,
        "name": "ContractDefinition",
        "src": "762:307:2"
      }
    ],
    "id": 102,
    "name": "SourceUnit",
    "src": "603:467:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T16:42:57.354Z",
  "devdoc": {
    "author": "dYdX * Partial interface for a Chainlink Aggregator.",
    "methods": {
      "latestAnswer()": {
        "details": "Warning: Will return 0 if no answer has been reached."
      }
    },
    "title": "I_Aggregator"
  },
  "userdoc": {
    "methods": {
      "latestAnswer()": {
        "notice": "Get the most recent answer from the aggregator."
      }
    }
  }
}