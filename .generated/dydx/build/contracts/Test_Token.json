{
  "contractName": "Test_Token",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Test_Token\"},\"userdoc\":{\"methods\":{},\"notice\":\"ERC-20 token for testing\"}},\"settings\":{\"compilationTarget\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/Test_Token.sol\":\"Test_Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/Test_Token.sol\":{\"keccak256\":\"0xe0e8c38cabacae7975531da11705108965dc8419440cddb93b52ce78ab50b0fa\",\"urls\":[\"bzz-raw://fd32fd86bafb677427b7275249b3fc486451c4b6e36d2644373962af2f33d526\",\"dweb:/ipfs/QmSKYaGwZsTDz8fWRxRn2vqMSF3bLQ3YXMwngCQ87WVQvq\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c806340c10f1911610081578063a457c2d71161005b578063a457c2d714610197578063a9059cbb146101aa578063dd62ed3e146101bd576100d4565b806340c10f191461016757806370a082311461017c57806395d89b411461018f576100d4565b806323b872dd116100b257806323b872dd1461012c578063313ce5671461013f5780633950935114610154576100d4565b806306fdde03146100d9578063095ea7b3146100f757806318160ddd14610117575b600080fd5b6100e16101d0565b6040516100ee9190610cb1565b60405180910390f35b61010a610105366004610a2c565b610284565b6040516100ee9190610ca3565b61011f6102a2565b6040516100ee9190610d22565b61010a61013a3660046109df565b6102a8565b61014761034f565b6040516100ee9190610d30565b61010a610162366004610a2c565b610358565b61017a610175366004610a2c565b6103b9565b005b61011f61018a36600461097f565b6103c7565b6100e16103ef565b61010a6101a5366004610a2c565b61046e565b61010a6101b8366004610a2c565b6104e9565b61011f6101cb3660046109a5565b6104fd565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561027a5780601f1061024f5761010080835404028352916020019161027a565b820191906000526020600020905b81548152906001019060200180831161025d57829003601f168201915b5050505050905090565b6000610298610291610535565b8484610539565b5060015b92915050565b60025490565b60006102b5848484610651565b610345846102c1610535565b61034085604051806060016040528060288152602001610e1c6028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061030c610535565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff6107dc16565b610539565b5060019392505050565b60055460ff1690565b6000610298610365610535565b846103408560016000610376610535565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61082216565b6103c38282610868565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561027a5780601f1061024f5761010080835404028352916020019161027a565b600061029861047b610535565b8461034085604051806060016040528060258152602001610e4460259139600160006104a5610535565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107dc16565b60006102986104f6610535565b8484610651565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff831661058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610d02565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610cd2565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610644908590610d22565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610cf2565b73ffffffffffffffffffffffffffffffffffffffff82166106eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610cc2565b61073b81604051806060016040528060268152602001610df66026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff6107dc16565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461077d908263ffffffff61082216565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610644908590610d22565b6000818484111561081a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105869190610cb1565b505050900390565b600082820183811015610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610ce2565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff82166108b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610d12565b6002546108c8908263ffffffff61082216565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610901908263ffffffff61082216565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061095d908590610d22565b60405180910390a35050565b803561029c81610dd5565b803561029c81610dec565b60006020828403121561099157600080fd5b600061099d8484610969565b949350505050565b600080604083850312156109b857600080fd5b60006109c48585610969565b92505060206109d585828601610969565b9150509250929050565b6000806000606084860312156109f457600080fd5b6000610a008686610969565b9350506020610a1186828701610969565b9250506040610a2286828701610974565b9150509250925092565b60008060408385031215610a3f57600080fd5b6000610a4b8585610969565b92505060206109d585828601610974565b610a6581610d56565b82525050565b6000610a7682610d3e565b610a808185610d42565b9350610a90818560208601610d7d565b610a9981610dad565b9093019392505050565b6000610ab0602383610d42565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610b0f602283610d42565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610b6e601b83610d42565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000610ba7602583610d42565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610c06602483610d42565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610c65601f83610d42565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300815260200192915050565b610a6581610d74565b610a6581610d77565b6020810161029c8284610a5c565b602080825281016108618184610a6b565b6020808252810161029c81610aa3565b6020808252810161029c81610b02565b6020808252810161029c81610b61565b6020808252810161029c81610b9a565b6020808252810161029c81610bf9565b6020808252810161029c81610c58565b6020810161029c8284610c91565b6020810161029c8284610c9a565b5190565b90815260200190565b600061029c82610d5b565b151590565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b60ff1690565b60005b83811015610d98578181015183820152602001610d80565b83811115610da7576000848401525b50505050565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b610dde81610d4b565b8114610de957600080fd5b50565b610dde81610d7456fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa365627a7a723158209e382790be22e0203559c62f57d535075cf15a97dad14e428ccf2e90c11875f66c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "416:163:63:-;947:181:49;416:163:63;;;-1:-1:-1;;;416:163:63;;;;;947:181:49;416:163:63;;;;;;-1:-1:-1;;;416:163:63;;947:181:49;;1021:2;;504:12:63;;:5;;416:163;504:12;:::i;:::-;-1:-1:-1;526:16:63;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:63;:20;;-1:-1:-1;;552:20:63;;;;;;;;;;;;-1:-1:-1;947:181:49;;-1:-1:-1;947:181:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:181:49;;;-1:-1:-1;947:181:49;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "947:181:49:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:181:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:63;;;:::i;:::-;;;;;;;;;;;;;;;;2500:149:62;;;;;;;;;:::i;:::-;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;3107:300;;;;;;;;;:::i;1472:81:63:-;;;:::i;:::-;;;;;;;;3802:207:62;;;;;;;;;:::i;1031:95:49:-;;;;;;;;;:::i;:::-;;1706:108:62;;;;;;;;;:::i;838:85:63:-;;;:::i;4496:258:62:-;;;;;;;;;:::i;2017:155::-;;;;;;;;;:::i;2230:132::-;;;;;;;;;:::i;644:81:63:-;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2500:149:62:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:62;2500:149;;;;;:::o;1559:89::-;1629:12;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;-1:-1:-1;3289:33:62;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:62;3107:300;;;;;:::o;1472:81:63:-;1537:9;;;;1472:81;:::o;3802:207:62:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:62;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1031:95:49:-;1097:22;1103:7;1112:6;1097:5;:22::i;:::-;1031:95;;:::o;1706:108:62:-;1789:18;;1763:7;1789:18;;;;;;;;;;;;1706:108::o;838:85:63:-;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4496:258:62;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:62;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;2328:18;;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;788:96:59:-;867:10;788:96;:::o;7350:332:62:-;7443:19;;;7435:68;;;;;;;;;;;;;;;;;;;;;;7521:21;;;7513:68;;;;;;;;;;;;;;7592:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;7643:32;;;;;7622:6;;7643:32;;;;;;;;;;7350:332;;;:::o;5228:464::-;5325:20;;;5317:70;;;;;;;;;;;;;;5405:23;;;5397:71;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;5479:17;;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;5580:20;;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;;;;5678:6;;5650:35;;1732:187:60;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:60;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:60:o;5962:302:62:-;6037:21;;;6029:65;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;6175:18;;;:9;:18;;;;;;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;6154:18;;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;6154:18;;:9;6220:37;;;;6250:6;;6220:37;;;;;;;;;;5962:302;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:130;209:20;;234:33;209:20;234:33;;279:241;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;476:9;451:53;;;441:63;345:175;-1:-1;;;;345:175;527:366;;;648:2;636:9;627:7;623:23;619:32;616:2;;;664:1;661;654:12;616:2;699:1;716:53;761:7;741:9;716:53;;;706:63;;678:97;806:2;824:53;869:7;860:6;849:9;845:22;824:53;;;814:63;;785:98;610:283;;;;;;900:491;;;;1038:2;1026:9;1017:7;1013:23;1009:32;1006:2;;;1054:1;1051;1044:12;1006:2;1089:1;1106:53;1151:7;1131:9;1106:53;;;1096:63;;1068:97;1196:2;1214:53;1259:7;1250:6;1239:9;1235:22;1214:53;;;1204:63;;1175:98;1304:2;1322:53;1367:7;1358:6;1347:9;1343:22;1322:53;;;1312:63;;1283:98;1000:391;;;;;;1398:366;;;1519:2;1507:9;1498:7;1494:23;1490:32;1487:2;;;1535:1;1532;1525:12;1487:2;1570:1;1587:53;1632:7;1612:9;1587:53;;;1577:63;;1549:97;1677:2;1695:53;1740:7;1731:6;1720:9;1716:22;1695:53;;1771:104;1848:21;1863:5;1848:21;;;1843:3;1836:34;1830:45;;;1882:347;;1994:39;2027:5;1994:39;;;2045:71;2109:6;2104:3;2045:71;;;2038:78;;2121:52;2166:6;2161:3;2154:4;2147:5;2143:16;2121:52;;;2194:29;2216:6;2194:29;;;2185:39;;;;1974:255;-1:-1;;;1974:255;2237:372;;2397:67;2461:2;2456:3;2397:67;;;2497:34;2477:55;;2566:5;2561:2;2552:12;;2545:27;2600:2;2591:12;;2383:226;-1:-1;;2383:226;2618:371;;2778:67;2842:2;2837:3;2778:67;;;2878:34;2858:55;;2947:4;2942:2;2933:12;;2926:26;2980:2;2971:12;;2764:225;-1:-1;;2764:225;2998:327;;3158:67;3222:2;3217:3;3158:67;;;3258:29;3238:50;;3316:2;3307:12;;3144:181;-1:-1;;3144:181;3334:374;;3494:67;3558:2;3553:3;3494:67;;;3594:34;3574:55;;3663:7;3658:2;3649:12;;3642:29;3699:2;3690:12;;3480:228;-1:-1;;3480:228;3717:373;;3877:67;3941:2;3936:3;3877:67;;;3977:34;3957:55;;4046:6;4041:2;4032:12;;4025:28;4081:2;4072:12;;3863:227;-1:-1;;3863:227;4099:331;;4259:67;4323:2;4318:3;4259:67;;;4359:33;4339:54;;4421:2;4412:12;;4245:185;-1:-1;;4245:185;4438:113;4521:24;4539:5;4521:24;;4558:107;4637:22;4653:5;4637:22;;4672:201;4784:2;4769:18;;4798:65;4773:9;4836:6;4798:65;;4880:301;5018:2;5032:47;;;5003:18;;5093:78;5003:18;5157:6;5093:78;;5188:407;5379:2;5393:47;;;5364:18;;5454:131;5364:18;5454:131;;5602:407;5793:2;5807:47;;;5778:18;;5868:131;5778:18;5868:131;;6016:407;6207:2;6221:47;;;6192:18;;6282:131;6192:18;6282:131;;6430:407;6621:2;6635:47;;;6606:18;;6696:131;6606:18;6696:131;;6844:407;7035:2;7049:47;;;7020:18;;7110:131;7020:18;7110:131;;7258:407;7449:2;7463:47;;;7434:18;;7524:131;7434:18;7524:131;;7672:213;7790:2;7775:18;;7804:71;7779:9;7848:6;7804:71;;7892:205;8006:2;7991:18;;8020:67;7995:9;8060:6;8020:67;;8104:122;8192:12;;8163:63;8234:163;8337:19;;;8386:4;8377:14;;8330:67;8405:91;;8467:24;8485:5;8467:24;;8503:85;8569:13;8562:21;;8545:43;8595:121;8668:42;8657:54;;8640:76;8723:72;8785:5;8768:27;8802:81;8873:4;8862:16;;8845:38;8891:268;8956:1;8963:101;8977:6;8974:1;8971:13;8963:101;;;9044:11;;;9038:18;9025:11;;;9018:39;8999:2;8992:10;8963:101;;;9079:6;9076:1;9073:13;9070:2;;;9144:1;9135:6;9130:3;9126:16;9119:27;9070:2;8940:219;;;;;9167:97;9255:2;9235:14;9251:7;9231:28;;9215:49;9272:117;9341:24;9359:5;9341:24;;;9334:5;9331:35;9321:2;;9380:1;9377;9370:12;9321:2;9315:74;;9396:117;9465:24;9483:5;9465:24;",
  "source": "/*\n\n    Copyright 2020 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { ERC20Detailed } from \"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\";\n\n\n/**\n * @title Test_Token\n * @author dYdX\n *\n * @notice ERC-20 token for testing\n */\n/* solium-disable-next-line camelcase */\ncontract Test_Token is\n    ERC20,\n    ERC20Detailed(\"Test Token\", \"TEST\", 18)\n{\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n}\n",
  "sourcePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/Test_Token.sol",
  "ast": {
    "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/Test_Token.sol",
    "exportedSymbols": {
      "Test_Token": [
        10252
      ]
    },
    "id": 10253,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10226,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:49"
      },
      {
        "id": 10227,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:49"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10229,
        "nodeType": "ImportDirective",
        "scope": 10253,
        "sourceUnit": 11936,
        "src": "662:70:49",
        "symbolAliases": [
          {
            "foreign": 10228,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10231,
        "nodeType": "ImportDirective",
        "scope": 10253,
        "sourceUnit": 11994,
        "src": "733:86:49",
        "symbolAliases": [
          {
            "foreign": 10230,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10232,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11935,
              "src": "974:5:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11935",
                "typeString": "contract ERC20"
              }
            },
            "id": 10233,
            "nodeType": "InheritanceSpecifier",
            "src": "974:5:49"
          },
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "5465737420546f6b656e",
                "id": 10235,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "999:12:49",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                  "typeString": "literal_string \"Test Token\""
                },
                "value": "Test Token"
              },
              {
                "argumentTypes": null,
                "hexValue": "54455354",
                "id": 10236,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1013:6:49",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                  "typeString": "literal_string \"TEST\""
                },
                "value": "TEST"
              },
              {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 10237,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1021:2:49",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 10234,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11993,
              "src": "985:13:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$11993",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10238,
            "nodeType": "InheritanceSpecifier",
            "src": "985:39:49"
          }
        ],
        "contractDependencies": [
          11225,
          11935,
          11993,
          12062
        ],
        "contractKind": "contract",
        "documentation": "@title Test_Token\n@author dYdX\n * @notice ERC-20 token for testing",
        "fullyImplemented": true,
        "id": 10252,
        "linearizedBaseContracts": [
          10252,
          11993,
          11935,
          12062,
          11225
        ],
        "name": "Test_Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10250,
              "nodeType": "Block",
              "src": "1087:39:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10246,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10240,
                        "src": "1103:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10247,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10242,
                        "src": "1112:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10245,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11819,
                      "src": "1097:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:22:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10249,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:22:49"
                }
              ]
            },
            "documentation": null,
            "id": 10251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10240,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10251,
                  "src": "1045:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10242,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10251,
                  "src": "1062:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1044:33:49"
            },
            "returnParameters": {
              "id": 10244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:49"
            },
            "scope": 10252,
            "src": "1031:95:49",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10253,
        "src": "947:181:49"
      }
    ],
    "src": "603:526:49"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/dennismacpro/Projects/Defi/Ethereum-Solidity-Collection/icarus-protocol/defi-seeder/.tmp/dydx-protocol/perpetual/contracts/test/Test_Token.sol",
      "exportedSymbols": {
        "Test_Token": [
          10252
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 10226,
        "name": "PragmaDirective",
        "src": "603:23:49"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 10227,
        "name": "PragmaDirective",
        "src": "627:33:49"
      },
      {
        "attributes": {
          "SourceUnit": 11936,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 10253,
          "symbolAliases": [
            {
              "foreign": 10228,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 10229,
        "name": "ImportDirective",
        "src": "662:70:49"
      },
      {
        "attributes": {
          "SourceUnit": 11994,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
          "scope": 10253,
          "symbolAliases": [
            {
              "foreign": 10230,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 10231,
        "name": "ImportDirective",
        "src": "733:86:49"
      },
      {
        "attributes": {
          "contractDependencies": [
            11225,
            11935,
            11993,
            12062
          ],
          "contractKind": "contract",
          "documentation": "@title Test_Token\n@author dYdX\n * @notice ERC-20 token for testing",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            10252,
            11993,
            11935,
            12062,
            11225
          ],
          "name": "Test_Token",
          "scope": 10253
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 11935,
                  "type": "contract ERC20"
                },
                "id": 10232,
                "name": "UserDefinedTypeName",
                "src": "974:5:49"
              }
            ],
            "id": 10233,
            "name": "InheritanceSpecifier",
            "src": "974:5:49"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 11993,
                  "type": "contract ERC20Detailed"
                },
                "id": 10234,
                "name": "UserDefinedTypeName",
                "src": "985:13:49"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "5465737420546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"Test Token\"",
                  "value": "Test Token"
                },
                "id": 10235,
                "name": "Literal",
                "src": "999:12:49"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "54455354",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"TEST\"",
                  "value": "TEST"
                },
                "id": 10236,
                "name": "Literal",
                "src": "1013:6:49"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 10237,
                "name": "Literal",
                "src": "1021:2:49"
              }
            ],
            "id": 10238,
            "name": "InheritanceSpecifier",
            "src": "985:39:49"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 10252,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 10251,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10239,
                        "name": "ElementaryTypeName",
                        "src": "1045:7:49"
                      }
                    ],
                    "id": 10240,
                    "name": "VariableDeclaration",
                    "src": "1045:15:49"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 10251,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10241,
                        "name": "ElementaryTypeName",
                        "src": "1062:7:49"
                      }
                    ],
                    "id": 10242,
                    "name": "VariableDeclaration",
                    "src": "1062:14:49"
                  }
                ],
                "id": 10243,
                "name": "ParameterList",
                "src": "1044:33:49"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10244,
                "name": "ParameterList",
                "src": "1087:0:49"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11819,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 10245,
                            "name": "Identifier",
                            "src": "1097:5:49"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10240,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 10246,
                            "name": "Identifier",
                            "src": "1103:7:49"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10242,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 10247,
                            "name": "Identifier",
                            "src": "1112:6:49"
                          }
                        ],
                        "id": 10248,
                        "name": "FunctionCall",
                        "src": "1097:22:49"
                      }
                    ],
                    "id": 10249,
                    "name": "ExpressionStatement",
                    "src": "1097:22:49"
                  }
                ],
                "id": 10250,
                "name": "Block",
                "src": "1087:39:49"
              }
            ],
            "id": 10251,
            "name": "FunctionDefinition",
            "src": "1031:95:49"
          }
        ],
        "id": 10252,
        "name": "ContractDefinition",
        "src": "947:181:49"
      }
    ],
    "id": 10253,
    "name": "SourceUnit",
    "src": "603:526:49"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T16:42:57.483Z",
  "devdoc": {
    "author": "dYdX",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Test_Token"
  },
  "userdoc": {
    "methods": {},
    "notice": "ERC-20 token for testing"
  }
}