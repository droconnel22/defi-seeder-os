/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Token677ReceiverMock } from "./Token677ReceiverMock";

export class Token677ReceiverMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Token677ReceiverMock> {
    return super.deploy(overrides) as Promise<Token677ReceiverMock>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Token677ReceiverMock {
    return super.attach(address) as Token677ReceiverMock;
  }
  connect(signer: Signer): Token677ReceiverMockFactory {
    return super.connect(signer) as Token677ReceiverMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Token677ReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Token677ReceiverMock;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "tokenData",
    outputs: [
      {
        name: "",
        type: "bytes"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "calledFallback",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "sentValue",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "tokenSender",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_sender",
        type: "address"
      },
      {
        name: "_value",
        type: "uint256"
      },
      {
        name: "_data",
        type: "bytes"
      }
    ],
    name: "onTokenTransfer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x60606040526003805460ff19169055341561001957600080fd5b5b6103e8806100296000396000f300606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663024fd6508114610069578063390f6426146100f45780636dcb8d841461011b5780639898e18c14610140578063a4c0ed361461017c575b600080fd5b341561007457600080fd5b61007c6101f0565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100b95780820151818401525b6020016100a0565b50505050905090810190601f1680156100e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156100ff57600080fd5b61010761028e565b604051901515815260200160405180910390f35b341561012657600080fd5b61012e610297565b60405190815260200160405180910390f35b341561014b57600080fd5b61015361029d565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b341561018757600080fd5b6101ee6004803573ffffffffffffffffffffffffffffffffffffffff169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506102b995505050505050565b005b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b60035460ff1681565b60015481565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600160ff1990911681179091556000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff8616179055829055600281805161031592916020019061031c565b505b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061035d57805160ff191683800117855561038a565b8280016001018555821561038a579182015b8281111561038a57825182559160200191906001019061036f565b5b5061039792915061039b565b5090565b6103b991905b8082111561039757600081556001016103a1565b5090565b905600a165627a7a72305820cbb7053f35fa4ac5b8fc3964911af099808cca6fba6674239745c536f079f7f60029";
