/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface Token677ReceiverMockInterface extends Interface {
  functions: {
    calledFallback: TypedFunctionDescription<{ encode([]: []): string }>;

    onTokenTransfer: TypedFunctionDescription<{
      encode([_sender, _value, _data]: [
        string,
        BigNumberish,
        Arrayish
      ]): string;
    }>;

    sentValue: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenData: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenSender: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class Token677ReceiverMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Token677ReceiverMock;
  attach(addressOrName: string): Token677ReceiverMock;
  deployed(): Promise<Token677ReceiverMock>;

  on(event: EventFilter | string, listener: Listener): Token677ReceiverMock;
  once(event: EventFilter | string, listener: Listener): Token677ReceiverMock;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): Token677ReceiverMock;
  removeAllListeners(eventName: EventFilter | string): Token677ReceiverMock;
  removeListener(eventName: any, listener: Listener): Token677ReceiverMock;

  interface: Token677ReceiverMockInterface;

  functions: {
    calledFallback(): Promise<boolean>;

    onTokenTransfer(
      _sender: string,
      _value: BigNumberish,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    sentValue(): Promise<BigNumber>;

    tokenData(): Promise<string>;

    tokenSender(): Promise<string>;
  };

  calledFallback(): Promise<boolean>;

  onTokenTransfer(
    _sender: string,
    _value: BigNumberish,
    _data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  sentValue(): Promise<BigNumber>;

  tokenData(): Promise<string>;

  tokenSender(): Promise<string>;

  filters: {};

  estimate: {
    calledFallback(): Promise<BigNumber>;

    onTokenTransfer(
      _sender: string,
      _value: BigNumberish,
      _data: Arrayish
    ): Promise<BigNumber>;

    sentValue(): Promise<BigNumber>;

    tokenData(): Promise<BigNumber>;

    tokenSender(): Promise<BigNumber>;
  };
}
